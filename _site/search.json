[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX01/Hands-on_EX01.html",
    "href": "Hands-on_exercise/Hands-on_EX01/Hands-on_EX01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Getting Started\n\nInstall and launch R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed.\nThe code chunk below will import the library one by one\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\nAlternatively, we can load all using p_load, this is more effective:\n\npacman::p_load(tidyverse)\n\n\n\nImporting the data\n\nexam_data <- read_csv(\"Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPlotting a bar chart"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "pacman::p_load(tidyverse, patchwork, \n               ggthemes, hrbrthemes, \n               ggrepel)"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#importing-the-dataset",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#importing-the-dataset",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Importing the dataset",
    "text": "Importing the dataset\n\nexam_data <- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#drawing-a-scatter-plot",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#drawing-a-scatter-plot",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Drawing a scatter plot",
    "text": "Drawing a scatter plot\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_smooth(method=lm,size=0.5)+\n  geom_label_repel(aes(label=ID),fontface=\"bold\")+\n  theme_bw()+\n  ggtitle(\"English Scores vs Maths Scores for Primary 3 Students\")+ \n  theme(plot.title = element_text(size=15, hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#plotting-a-histogram",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#plotting-a-histogram",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Plotting a histogram",
    "text": "Plotting a histogram\n\nggplot(exam_data, \n       aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey10\",\n                 fill=\"grey45\")+\n  theme_ipsum(base_size=12, grid=\"Y\") +\n  ggtitle(\"Distribution of Maths scores\")+\n  theme(plot.title = element_text(size=15, hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#creating-composite-plot-using-patchwork",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#creating-composite-plot-using-patchwork",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Creating composite plot using patchwork",
    "text": "Creating composite plot using patchwork\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey60\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey60\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\npatchwork <- ((p1 + p2) / p3) + plot_annotation(tag_levels = \"I\")\npatchwork & theme_clean()"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX03/Hands-on_EX03.html",
    "href": "Hands-on_exercise/Hands-on_EX03/Hands-on_EX03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages (tidyverse and ggiraph) are installed and loaded.\n\npacman::p_load(ggplot2, ggiraph, grid, tidyverse, patchwork)\n\n\n\nImporting data\n\nexam_data <- read_csv(\"Exam_data.csv\")\n\n\n\nPlot a static dotplot with ggplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5, \n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\n\n\n\n\nPlot an interactive dotplot with ggirafe\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(             \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618   \n)\n\n\n\n\n\n\n\nDisplay multiple information on tooltip\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\nCustomizing tooltip style\n\ntooltip_css <- \"background-color:yellow; \nfont-style:bold; color:black;\" \n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = exam_data$tooltip),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    \n    opts_tooltip(    \n      css = tooltip_css)) \n)                                     \n\n\n\n\n\n\n\nAdding hover effect with data_id aesthetic - highlighting the same class\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),  \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\n\n\nStyling hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                       \n    opts_hover(css = \"fill: #202020;\"), \n    opts_hover_inv(css = \"opacity:0.2;\")\n  )\n)\n\n\n\n\n\n\n\nCombining tooltip and hover effect\n\ntooltip_css <- \"background-color:#ffdab9; \nfont-style:bold; color:black;\" \n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = exam_data$tooltip, #<<\n        data_id = CLASS),#<<              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_tooltip(    \n      css = tooltip_css)\n  )                                        \n)\n\n\n\n\n\n\n\nCoordinating multiple views with ggiraph\nWhen hovering over a data point of one of the dotplot, the related data point on the second data visualisation will be highlighted too.\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\npatch = wrap_elements((p1) / p2)\ngirafe(ggobj = patch, \n       width_svg = 6,\n       height_svg = 5,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX04/Hands-on_EX04.html",
    "href": "Hands-on_exercise/Hands-on_EX04/Hands-on_EX04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Loading required packages\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\nImporting data\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\nOne-sample test: gghistostats() method\nUse gghistostats() to build a visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\nUse ggbetweenstats() to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\nOneway ANOVA Test: ggbetweenstats() method\nUse ggbetweenstats() to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\nUse ggscatterstats() to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex03.html",
    "href": "In-class_Exercise/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages (tidyverse and ggiraph) are installed and loaded.\n\npacman::p_load(ggiraph, tidyverse)\n\n\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nPlot a dotplot (static)\n\nggplot(data=exam_data, aes(x= MATHS)) + \n      geom_dotplot(dotsize=0.5)\n\n\n\n\n\n\nPlot a dotplot (interactive)\n\np <- ggplot(data=exam_data, aes(x= MATHS)) + \n      geom_dotplot_interactive(aes(tooltip = ID),\n      stackgroups = TRUE, binwidth=1, method = \"histodot\")\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex04.html",
    "href": "In-class_Exercise/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Loading required packages\n\n\nHide the code\npacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot)\n\n\n\n\nImporting data\n\n\nHide the code\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nWorking with Plot_ly() method\n\n\nHide the code\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\nChanging color with color palette\n\n\nHide the code\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = \"Set1\")\n\n\n\n\n\n\n\n\nChanging to self-defined colors\n\n\nHide the code\nmy_colors <- c(\"pink\",\"skyblue\",\"lightgreen\",\"grey\")\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = my_colors)\n\n\n\n\n\n\n\n\n\nWorking with ggplotly() method\n\n\nHide the code\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nCoordinated Multiple Views with plotly\n\n\nHide the code\nd <- highlight_key(exam_data)  #<<\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\nWorking with ggstatsplot\n\n\nHide the code\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics & Application",
    "section": "",
    "text": "Welcome to my site!\nHello, I am Shiang Rou.\nThis site contains all the individual assignments and work done for ISSS608 Visual Analytics module in SMU Master of IT in Business."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "In this take-home exercise, we will explore using age-sex pyramids to showcase the age and gender composition of Singapore population in nine selected planning areas on single view using trellis display.\nSelection of planning areas In each of the 5 regions, we select 1 largest mature and 1 largest non-mature planning areas, based on number of residents. In East and North regions, only mature or non-mature estates are available, hence, 2 planning areas of the same maturity are selected in these 2 regions."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#dataset",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#dataset",
    "title": "Take Home Exercise 1",
    "section": "2. Dataset",
    "text": "2. Dataset\nThe dataset used, Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022, can be retrieved from the Singapore Department of Statistics home page.\n\n\n\nFigure above shows csv file on SingStats website\n\n\nAdditional information on regions and maturity of the planning areas were referenced from Wikipedia and PropertyGuru Singapore to provide more insights to the readers. The additional information consolidated can be retrieved from Github."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#preparation-steps",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#preparation-steps",
    "title": "Take Home Exercise 1",
    "section": "3. Preparation Steps",
    "text": "3. Preparation Steps\n\n3.1 Preparing the data in Tableau\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nLoad the csv file into Tableau.  Click “Connect to Data”, select “Text file” and choose the CSV file to connect to\n\n\n\n2.\nView the Notes.  Click on “View data” beside “Notes” for the view data screen to appear.\n\n\n\n3.\nRename the columns according to the data in Notes.  In the viewing panel on the right, click the down arrow button beside each field name and select “Rename” to change the name according to table shown in step 2.\n\n\n\n4.\nSave the Tableau file.  Click on “Save” button\n\n\n\n5.\nAdding additional information on region and maturity.  Click “Add” and select “Microsoft Excel” to choose the file to add.\n\n\n\n6.\nBuild the connection with “Maturity”.  1. Drag “Maturity” to the right until a line is form to connect to the original data.2. Select “Planning Area” = “Planning Area1”\n\n\n\n7.\nBuild the connection with “Region”.  1. Drag “Region” to the right until a line is form to connect to the original data.2. Select “Planning Area” = “Planning Area (Region)”\n\n\n\n\n\n\n3.2 Select 9 planning areas\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nSelecting the 9 planning areas based on highest resident count and when possible, choose 1 mature and 1 non-mature area in each region. 1. Click on sheet 1, drag “Region” into Columns and drag “Planning Area” and “Maturity” into Rows, then place “Resident Count” as the table content.2. Sort each region to find out the planning areas with highest resident count.The 9 selected planning areas: Central - Bukit Merah (Mature)East - Bedok (Mature), Tampines (Mature)North - Woodlands (Non-mature), Yishun (Non-mature)North-East - Sengkang (Non-mature), Ang Mo Kio (Mature)West - Jurong West (Non-mature), Clementi (Mature)\n\n\n\n2.\nApply filter to dataset.  Drag “Planning Area” into filter, select the 9 planning areas listed in previous step and click “Apply”.\n\n\n\n3.\nApply filter to all worksheets.  Click on “Planning Area” under filter, select “Apply to Worksheets” and “All Using This Data Source”.\n\n\n\n\n\n\n3.3 Plotting the charts\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nCreate calculated field for female and male resident count  Under Analysis, click “Create Calculated Field”, create a calculated field - “Female” by keying in the formula shown on the right, then repeat the step and create another calculated field - “Male”.\n\n\n\n2.\nCreate the base for age-sex pyramids  Drag “Females” and “Males” onto Columns and drag “Age Group” onto Rows.\n\n\n\n3.\nCreate calculated field - Index  Under Analysis, click “Create Calculated Field”, create a calculated field - “Index” by keying in the formula shown on the right.\n\n\n\n4.\nCreate parameter - Number of Columns  On Data panel, right click on empty space and select “Create Parameter…”On Edit Parameter screen, change the name and key in Current value of 2\n\n\n\n5.\nCreate calculated field - Columns  Under Analysis, click “Create Calculated Field”, create a calculated field - “Columns” by keying in the formula shown on the right.Once the calculated field “Columns” is created, right click on it on the Data panel, and select “Convert to Discrete”\n\n\n\n6.\nBuild trellis display  1. Drag “Columns” to Columns and drag “Region” to Rows 2. Drag “Planning Area” to Detail 3. Right click on “Planning Area” under Detail and select compute using “Planning Area”\n\n\n\n7.\nEdit X-Axis of “Females”  1. Right click “Females” on X-axis and select “Edit Axis”. 2. Select “Fixed” under range and set Fixed start to 0 and Fixed end to 14000. Check “Reversed” under Scale. 3. Navigate to “Tick Marks”, set Major Tick Marks to “Fixed” and set Tick interval to 2000.\n\n\n\n8.\nEdit X-Axis of “Males”  Right click “Males” on X-axis and select “Edit Axis”. 1. Select “Fixed” under range and set Fixed start to 0 and Fixed end to 14000.  2. Navigate to “Tick Marks”, set Major Tick Marks to “Fixed” and set Tick interval to 2000.\n\n\n\n9.\nChange fill and border colors  Click on color, select red fill and border line for “Females” and blue for “Males” for more intuitive visualization.\n\n\n\n10.\nSort the charts by resident counts  1. Drag “Resident Count” onto Tooltip2. Right click on “Planning Area” under “All” panel, and select Sort3. Select sort by “Field” and set Field Name as “Resident Count”4. Click on the triangle icon beside Region under Rows, Select sort by “Field” and set Field Name as “Resident Count”\n\n\n\n\n\n\n3.4 Creating calculated fields for additional insights\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nCreate calculated field - Female-to-Male Ratio  Under Analysis, click “Create Calculated Field” to create a calculated field - “Female-to-Male Ratio” by keying in the formula shown on the right.\n\n\n\n2.\nGroup type of dwelling into public, private and others 1. Right click on Type of Dwelling, select “Create” and the “Group” 2. Select the respective dwelling types and click Group, once all the 3 groups have been formed, click “Apply”.\n\n\n\n3.\nCreate calculated field - Public/Private Ratio Under Analysis, click “Create Calculated Field” to create a calculated field - “Public/Private Ratio” by keying in the formula shown on the right.\n\n\n\n4.\nCreate calculated field - Top Age Group Under Analysis, click “Create Calculated Field” to create 2 calculated fields - “TopAgeGroup-Female” and “TopAgeGroup-Male” by keying in the formula shown on the right.\n\n\n\n5.\nCreate calculated field - Window Resident Count Under Analysis, click “Create Calculated Field” to create a calculated field - “Window Resident Count” by keying in the formula shown on the right.\n\n\n\n6.\nAdd a line plot on Female-to-Male ratio Drag “Female-to-Male Ratio” to Columns, click on the triangle icon and select compute using “Cell”. Right click on the X-Axis for line plot, select “Edit Axis” to edit the title to “F/M Ratio”\n\n\n\n\n\n\n3.5 Adding labels and tooltips\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nCreate AVG(1) Type AVG(1) into Columns.\n\n\n\n2.\nChange chart type and color opacity Click on the dropdown button beside “Bar” and select “Line”. Then click on Color and adjust opacity to 0%.\n\n\n\n3.\nAdding labels 1. Drag “Planning Area”, “Maturity”, “Window Resident Count”, “Female-to-Male ratio” and “public/private ratio” onto Label2. Right click on “Maturity” and select “Attribute”\n\n\n\n4.\nEdit label 1. Click on “Label” and click 2. Edit Label according to the screenshot on the right.\n\n\n\n5.\nEdit tooltip for AVG(1) 1. Click on Tooltip and edit tooltip according to the screenshot on the right.\n\n\n\n6.\nEdit X-Axis for AVG(1) Right click on AVG(1) on the X-axis1. Select “Uniform axis range for all rows or columns”, check “Reversed” under Scale, and remove the axis title.2. Navigate to “Tick Marks”, select “None” under Major Tick Marks\n\n\n\n7.\nAdd labels for “Males” (Max) 1. Drag Resident count onto Label under SUM(Males), click the dropdown and select “Add Table Calculation”2. Select “Percent of Total as Calculation Type and compute using”Pane (down)“3. Click on Label and check”Show mark labels, select “Min/Max” and uncheck “Label minimum value”\n\n\n\n8.\nAdd labels for “Females” (selected) 1. Drag “Females”, “Males” and “Resident Count” onto Label under SUM(Females), click the dropdown and select “Add table calculation”2. Select “Percent of Total as Calculation Type and compute using”Pane (down)“3. Click on Label and check”Show mark labels and select “Selected”\n\n\n\n9.\nHighlight the top age group in each planning area Drag “TopAgeGroup-Female” to color under SUM(Females) and drag “TopAgeGroup-Male” to color under SUM(Males)\n\n\n\n10.\nAdjust tooltips for SUM(Females) and SUM(Males) Drag “Females”, “Males”, “Female-to-Male ratio” and “Maturity” onto tooltip under both SUM(Females) and SUM(Males). Edit the tooltip as shown on the right.\n\n\n\n11.\nAdd label for F/M Ratio  Drag “Females-to-Males ratio” onto Label, click on Label, check “Show mark labels”, select “Min/Max” and deselect “Label minimum value”.\n\n\n\n\n\n\n3.6 Formatting\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nChange sheet name Double click on sheet name to rename, type in “Trellis: Age-Sex Pyramids”.\n\n\n\n2.\nHide field labels for Columns Right click on “Columns” and select “Hide Field Labels for Columns”.\n\n\n\n3.\nHide header Right click on “1” or “2” at the column header and deselect “Show Header”.\n\n\n\n4.\nFormat column shading and fonts Right click on column/row header, select “Format” and edit the shading, font size, and bold the header font.\n\n\n\n5.\nAnnotate Right click on the empty area on the chart, select “Annotate” and “Area”, type in the text shown on the right and adjust the size of the box to fit the empty area.\n\n\n\n\n\n\n3.7 Dashboarding\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nAdd new dashboard Click on  at the bottom of the page to create a new dashboard. Drag “Trellis: Age-Sex Pyramid” sheet from the Dashboard panel onto the space in the right. Under Size, select “Automatic”\n\n\n\n2.\nEdit title Double click on the title to edit the title to “Trellis Display: Age-Sex Pyramids of 9 planning areas located in 5 regions in Singapore in 2022”\n\n\n\n3.\nAdd descriptive text Drag “Text” from the Objects panel onto the charts. Adjust the height of the text box, double click on the text box to key in the text as shown on the right.\n\n\n\n\n\n\n3.8 Publishing to Tableau Public\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nExtract Data Under Data, select “Extract Data” and save the .hyper file.\n\n\n\n2.\nPublish to Tableau Public Under Server, select “Tableau Public” and “Save to Tableau Public”."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#trellis-display-age-sex-pyramids",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#trellis-display-age-sex-pyramids",
    "title": "Take Home Exercise 1",
    "section": "4. Trellis Display: Age-Sex Pyramids",
    "text": "4. Trellis Display: Age-Sex Pyramids\n\nThe interactive visualization can now be viewed on Tableau Public."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#key-observations",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#key-observations",
    "title": "Take Home Exercise 1",
    "section": "5. Key Observations",
    "text": "5. Key Observations\n1. Population size varies greatly across planning areas (PA), outer edges of Singapore more populated. From the trellis display, we observed that Bedok, Tampines, Jurong West, Sengkang, Woodlands and Yishun are significantly more populous than the other 3 PAs. We have mapped out the locations as shown below and observed that the more populous PAs are all located at outer edges of Singapore, and the 3 less populous PAs are either located near to or in Central Region.   2. Mature estates have larger proportion of aged residents. The 3 mature PAs - Bukit Merah, AngMoKio and Clementi have 16.5%, 16.1% and 14.6% of their residents above 70 years old respectively. These proportions are much higher as compared to the 4 non-mature PAs (Woodlands, Yishun, Sengkang, Jurong West), with only 6.51% to 8.69% of their residents age above 70. This observation is consistent with the PA’s maturity. As mature PAs have been around for longer (>20 years), it’s logical to have composition of older residents. Although the 2 mature PAs in East Region (Bedok, Tampines) have slightly lower proportion of residents above 70, at 13.75% and 9.58% respectively, their proportion of residents above 60 is at a similar level to that of Bukit Merah, AngMoKio and Clementi.\n3. In the same region, non-mature PAs are more populated than mature PAs. For regions with both mature and non-mature PAs, the biggest non-mature PA in the region has significantly more residents than the biggest mature PA in the same region. This is observed from both West and North-East Region. The biggest non-mature PA in West Region, Jurong West is 1.75x more populous than Clementi, the biggest mature PA in the West. Also, Sengkang, the biggest non-mature PA in North-East Region has 57% more residents than the biggest mature PA in North-East, Ang Mo Kio.\n4. High proportion of young families in Yishun, Woodlands, Sengkang and Tampines. As evident from the trellis chart, these 4 PAs seem to be preferred by younger residents in their 20s and 30s. Besides, these PAs also have higher proportion of children under 10, as compared to other selected PAs. This indicates a pool of relatively younger families residing in these 4 PAs.\n5. Shift in age distribution after age 70, with Females-to-Males ratio peaks after age 90 across all PAs. The line charts show that female-to-male ratio follows a constant uptrend after age 70, with female population more than double the male population at age 90 onward. This is unsurprising as statistics have shown that females have longer average life expectancy than males in Singapore. Additionally, a small bulge is also observed on the female-to-male ratio at age 30s to 40s, and the reason behind this bulge might be worth investigating.\n6. Bedok has highest proportion of private housing, while Woodlands has highest proportion of HDB dwellers. In 2022, approximately 20% of residents resided in private housing in Singapore. Given this statistic, Bedok seems to be more prestige as 36.7% of residents here resided in private housing. Of all the private housing residents in Singapore, 11.3% of them reside in Bedok. Woodlands, on the other hand, has 92.3% of its residents residing in public housing."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#future-work",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#future-work",
    "title": "Take Home Exercise 1",
    "section": "6. Future Work",
    "text": "6. Future Work\nThe above observations are extracted based on only 9 selected PAs, we can expand this study to all 55 PAs to find out if some of the observations persist."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html",
    "title": "Take Home Exercise 2",
    "section": "",
    "text": "In this take-home exercise, a selected Tableau visualization submitted by classmate in take-home exercise 1 is reviewed based on its clarity and aesthetics. Constructive suggestions are given based on data visualization design principles and best practices learned in Lesson 1 and 2. An alternative design is also proposed to help improve on the original visual. Instead of Tableau, the proposed design is produced using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#original-visualization",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#original-visualization",
    "title": "Take Home Exercise 2",
    "section": "2. Original visualization",
    "text": "2. Original visualization\nThe original visualization was done using Tableau and can be viewed on Tableau Public. Figure below shows a screenshot of the original visual.   The dataset used, Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022, can be retrieved from the Singapore Department of Statistics’ website."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#review-on-original-visualization",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#review-on-original-visualization",
    "title": "Take Home Exercise 2",
    "section": "3. Review on original visualization",
    "text": "3. Review on original visualization\nThis section is divided into 3 parts for easy reading.  In 3.1, the merits of original visual are identified for peer learning, followed by 3.2, where the focus is shifted to point out the areas of improvement on clarity, and lastly, 3.3, where the aesthetics aspect of the visual is discussed.\n\n3.1 Merits of the original visual\n\na. Clean background was used.\nIn the original visualization, a white background was used, allowing viewers to clearly see all the pyramid charts and labels at one glance.\n\n\nb. The charts are clearly labelled.\nThe x-axis, y-axis and all 9 planning areas were labelled accordingly, with all labels in horizontal writing that is easy for viewers to read.\n\n\nc. Appropriate use of pyramid chart.\nAs the intention of the dashboard is to showcase the age and gender distribution of the selected planning areas, the use of pyramid chart type is appropriate and suitable for comparison.\n\n\nd. The intention of the dashboard is clear to viewers.\nAs the same colors were used for male and female across the 9 pyramids, it is obvious to viewers that the 9 pyramids on the dashboard are of the same structure, and the intention is for viewers to easily compare the shape of the 9 pyramids.\n\n\n\n3.2 Clarity\n\na. Absence of clear title – difficult for viewers to comprehend the visual at first glance.\nThe dashboard lacks a title to describe the content of the visual. Even though a short name, “Singapore Population Distribution by Age”, was given to the Viz in Tableau, it does not provide enough context for viewers and hence, can be misleading. For example, based on the short name given, viewers who are unfamiliar with Singapore might assume that the charts include the age distribution of the entire Singapore’s population. In addition, the date of this data is unclear. As demographic data is ever changing, the title should also indicate the date of the data to prevent any confusion.\n\n\nb. Two different scales were used on the x-axes – might result in misleading comparisons.\nThe scales of x-axes differ for male and female population, and across the different planning areas. When doing comparison, viewers who are not aware of this difference could accidentally draw misleading insights. Taking Punggol’s pyramid as example, the bar of female residents in age group 35-39 has the same length as the bar of male residents in the same age group. However, the tooltip shows that there are 63k female residents and only 55k male residents in this age group.\n\n\n\n\n\n\n\nAgain, comparing between Choa Chu Kang and Punggol, judging solely from the length of the bars, both highlighted bars seem to have similar length, however, the number of residents in these two highlighted rows differs by 11k - Choa Chu Kang has 43,140 female residents and Punggol has 54,700 female residents.\n\n\n\n\n\nc. Number of residents shown on charts looks inflated.\nAdding up the number of residents in each age group, the original visualization shows that Bedok has a total of 1.46million residents. This number seems a bit dubious as according toSingStats, there were only 4.07million residents in Singapore as of June 2022. Adding up all the number of residents shown in the 9 planning areas in original visualization would have exceeded the total number of residents in Singapore. With the dataset used in take-home exercise 1, I have tabulated the number of residents by planning areas. As shown in the table below, Bedok has a total of 278k residents only, this does not tally with the original visual.\n\n\n\n\n\nHowever, we are unable to investigate this further as the original source of data used in the original visual was not provided, and the date of original data was not stated as well.\n\n\nd. Absence of legend for color gradient, and gradient intensity is relative to bars within the same pyramid, not across pyramids.\nThe original visualization included color gradient on the pyramid charts. However, there is no legend to describe the gradient, leaving it to the viewers to assume. When inspected closely, we realise that the gradient intensity is with relative to the other bars within the same pyramid, rather than across all 9 pyramids. This might mislead viewers when making comparison. Furthermore, as the length of the bars in the pyramids are already indicating the number of residents in each age group, color gradients might just be an extra element that competes for viewers’ attention.\n\n\n\n3.3 Aesthetics\n\na. Color options can be more intuitive.\nThe 2 colors used in the original visualization to represent male and female population can be made more intuitive. We can choose to align the color selection with common color associations that the general public have, i.e. blue for male and red/pink for female. This will help viewers to better associate and reduce the need for viewers to repeatedly refer to x-axis label for guidance.\n\n\nb. Charts of the 9 planning areas are not aligned.\nThe 9 pyramid charts seem to have been added to the dashboard one-by-one, resulting in different axis widths and misalignment of the charts. This affects the aesthetics of the dashboard, making it look disorganized and unprofessional.\n\n\nc. Overlapping y-axis labels.\nThe labels of the age groups on y-axis overlap each other, making it difficult for viewers to read. Some of the y-axis titles were cut off as well due to the different axis widths.\n\n\nd. Some longer bars in the pyramids were cropped off.\nAs shown in the screenshot below, the 2 highlighted bars seem to have been cropped off on the right. Even though the number of residents were provided in tooltips, this affects the aesthetics of the visual and the viewing experience.\n\n\n\n\n\n\n\ne. Repeated x-axis and y-axis labels.\nThe x-axis and y-axis labels should be the same across all 9 pyramids. Repeating the axis labels for 9 times makes the dashboard look congested."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#proposed-visualization",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#proposed-visualization",
    "title": "Take Home Exercise 2",
    "section": "4. Proposed Visualization",
    "text": "4. Proposed Visualization\nThe proposed visualization retains the merits of the original visualization while improving on the clarity and aesthetics. Below is a rough sketch of the proposed visualization.\n\n\n\n\n4.1 Key improvements.\n\na. Clear title - indicating context and date.\nA clear title “Age-sex pyramids of top 9 planning areas by population count in Singapore, June 2022” is included for viewers to quickly grasp the context of the charts.\n\n\nb. Single scale on shared x-axis and shared y-axis.\nInstead of using separate axes with different scales, the proposed visual is plotted on shared x and y axis. This allows viewers to compare across the different planning areas easily, without having to worry about the different axis scales.\n\n\nc. More intuitive colors.\nUse blue for males and pink for females to align to common color associations.\n\n\nd. Organized layout with proper alignment.\nThe title, labels, legends, and charts are properly positioned, sized and aligned.\n\n\ne. Allow comparison with overall resident population.\nThe composite chart under 5(i) allows viewers to easily compare the shape of pyramid of each planning area with the pyramid of entire Singapore resident population."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#the-remake",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#the-remake",
    "title": "Take Home Exercise 2",
    "section": "5. The Remake",
    "text": "5. The Remake\n\na. Load the required libraries\n\n\nHide the code\npacman::p_load(ggiraph, plotly, patchwork, hrbrthemes, ggthemes, \n               knitr, rmarkdown, flextable, tidyverse)\n\n\n\n\nb. Import the data\n\n\nHide the code\nresults <- 'hide'\ndata2022 <- read_csv(\"respopagesextod2022.csv\")\npaged_table(data2022, options = list(rows.print = 5))\n\n\n\n\n  \n\n\n\n\n\nc. Group data by Planning Areas, Age Group and Sex\n\n\nHide the code\ndata2022$Age_Group <- factor (data2022$Age_Group, \n                              levels = unique(data2022$Age_Group)) \ndata2022$Planning_Areas <- factor (data2022$Planning_Areas, \n                                   levels = unique(data2022$Planning_Areas)) \n\n# Group by Planning Areas, Age Group and Sex\ndata_grp <- data2022 %>%\n                    group_by(`Planning_Areas`, `Age_Group`, `Sex`) %>%\n                    summarise('Population_Count'= sum(`Population`)) %>%\n                    ungroup()\npaged_table(data_grp, options = list(rows.print = 5))\n\n\n\n\n  \n\n\n\n\n\nd. Select the top 9 planning areas by population count\n\n\nHide the code\ntop9PA <- data_grp %>%\n  group_by(Planning_Areas) %>%\n  summarise(count = sum(Population_Count)) %>%\n  arrange(desc(count),.by_group = TRUE) %>%\n  top_n(9,count)\n\ndata_top9 <- data_grp[data_grp$Planning_Areas %in% top9PA$Planning_Areas,]\nprint(unique(data_top9$Planning_Areas))\n\n\n[1] Bedok         Choa Chu Kang Hougang       Jurong West   Punggol      \n[6] Sengkang      Tampines      Woodlands     Yishun       \n55 Levels: Ang Mo Kio Bedok Bishan Boon Lay Bukit Batok ... Yishun\n\n\n\n\ne. Converting population count of males to negative.\nIn order to plot age-sex pyramids, we need to convert the population count for one of the gender to negative. As we want “Male” to appear on the left side of the pyramids (to mimic the original visualization), we convert male population count to negative using the mutate function.\n\n\nHide the code\ndata_all_males <- data_grp %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Population_Count = -Population_Count)\n\ndata_males <- data_top9 %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Population_Count = -Population_Count)\n\n\n\n\nf. Combining the converted males population count with female population count.\n\n\nHide the code\ndata_all_females <- data_grp %>%\n  filter(`Sex` ==  \"Females\") \ndata_all_transform <- rbind(data_all_males,data_all_females)\n\ndata_females <- data_top9 %>%\n  filter(`Sex` ==  \"Females\") \ndata_top9_transform <- rbind(data_males,data_females)\n\n\n\n\ng. Plotting the age-sex pyramid of entire Singapore population.\n\n\nHide the code\ndata_all_transform_grp <- data_all_transform %>%\n  group_by(`Age_Group`, `Sex`) %>%\n  summarise('Population_Count'= sum(`Population_Count`)) %>%\n  ungroup()\n\nmy_colors <- c(\"salmon\",\"skyblue\")\npop_lab <- paste0(as.character(c(seq(160, 0, -40), seq(40, 160, 40))),\"k\")\np_all <- ggplot(data_all_transform_grp, aes (x = reorder(Age_Group, desc(Age_Group)), \n                                y = Population_Count, fill = Sex,\n                                text = paste(\"Age Group:\", Age_Group, \"\\nPopulation:\", abs(Population_Count), \"\\nSex\", Sex))) +\n    geom_bar(stat = \"identity\", width = .7) +\n    scale_y_continuous(name = \"Population Count\", breaks = seq (-160000,160000,40000), labels=pop_lab) +\n    xlab(\"Age\\nGroups\") +\n    coord_flip() + \n    theme_bw() + scale_fill_manual(values = my_colors) + \n    ggtitle(\"Age-sex pyramids of Singapore, June 2022\") + \n    theme(axis.title.y= element_text(angle=0),\n          axis.ticks.y = element_blank(),\n          panel.grid.major.y = element_blank(),\n          panel.grid.minor.x = element_line(colour = \"grey85\", linetype = \"dotted\"),\n          plot.title = element_text(size=13, hjust = 0.5),\n          legend.position = \"right\")\n\np_all\n\n\n\n\n\n\n\nh. Plotting the age-sex pyramids of top 9 planning areas\n\n\nHide the code\nxbrks <- seq(-12000, 12000, 3000)\nxlabls <- paste0(as.character(c(seq(12, 0, -3), seq(3, 12, 3))),\"k\")\nmy_colors <- c(\"salmon\",\"skyblue\")\np <-ggplot(data_top9_transform, aes (x = reorder(Age_Group, desc(Age_Group)), \n                                y = Population_Count, fill = Sex, \n                                text = paste(\"Age Group:\", Age_Group, \"\\nPopulation:\", abs(Population_Count), \"\\nSex\", Sex))) +\n    geom_bar(stat = \"identity\", width = .7) +\n    facet_wrap (~ Planning_Areas, nrow = 3, ncol = 3) + \n    scale_y_continuous(breaks = xbrks, labels = xlabls, name = \"Population Count\") +\n    xlab(\"Age\\nGroups\") +\n    coord_flip() + \n    theme_bw() + scale_fill_manual(values = my_colors) + \n    ggtitle(\"Age-sex pyramids of top 9 planning areas by population count in Singapore, June 2022\") + \n    theme(axis.title.y= element_text(angle=0),\n          axis.ticks.y = element_blank(),\n          panel.grid.major.y = element_blank(),\n          panel.grid.minor.x = element_line(colour = \"grey85\", linetype = \"dotted\"),\n          plot.title = element_text(size=13, hjust = 0.5),\n          legend.position = \"none\")\np1 <- p + theme(legend.position = \"right\")\n    \nshow(p1)\n\n\n\n\n\n\n\ni. Creating a composite chart.\n\n\nHide the code\ncolnames(top9PA)[2] <- \"Population Count\"\nmy_theme = gridExtra::ttheme_default(base_size = 12)\ntable <- gridExtra::tableGrob(top9PA, theme = my_theme)\npatch <- (p | table) +\n  plot_layout(widths = unit(c(22, 1),c(\"cm\",\"null\")))\n  \np_all / patch +\n  plot_layout(heights = unit(c(10, 1), c('cm', 'null')))\n\n\n\n\n\n\n\nj. Adding interactivity.\nWe can add interactivity to the plots using ggplotly.\n\n\nHide the code\np2 <- p_all + theme(axis.title.y = element_text(angle=0))\n\np3 <- p1 + theme(axis.text = element_text(size=5.5), \n          axis.title = element_text(size =9),\n          axis.title.y= element_text(angle=0),\n          axis.ticks.y = element_blank(),\n          strip.text = element_text(size=8),\n          plot.title = element_text(size=10, hjust = 0.5),\n          legend.key.size = unit(1, 'cm'),\n          legend.title = element_text(size=9),\n          legend.text = element_text(size=6),\n          legend.position = \"right\") \n\nggplotly(p2, tooltip=\"text\")\n\n\n\n\n\n\nHide the code\nggplotly(p3, tooltip=\"text\")"
  }
]