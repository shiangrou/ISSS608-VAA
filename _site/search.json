[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX01/Hands-on_EX01.html",
    "href": "Hands-on_exercise/Hands-on_EX01/Hands-on_EX01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Getting Started\n\nInstall and launch R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed.\nThe code chunk below will import the library one by one\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\nAlternatively, we can load all using p_load, this is more effective:\n\npacman::p_load(tidyverse)\n\n\n\nImporting the data\n\nexam_data <- read_csv(\"Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPlotting a bar chart"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "",
    "text": "pacman::p_load(tidyverse, patchwork, \n               ggthemes, hrbrthemes, \n               ggrepel)"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#importing-the-dataset",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#importing-the-dataset",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Importing the dataset",
    "text": "Importing the dataset\n\nexam_data <- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#drawing-a-scatter-plot",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#drawing-a-scatter-plot",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Drawing a scatter plot",
    "text": "Drawing a scatter plot\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  geom_smooth(method=lm,size=0.5)+\n  geom_label_repel(aes(label=ID),fontface=\"bold\")+\n  theme_bw()+\n  ggtitle(\"English Scores vs Maths Scores for Primary 3 Students\")+ \n  theme(plot.title = element_text(size=15, hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#plotting-a-histogram",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#plotting-a-histogram",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Plotting a histogram",
    "text": "Plotting a histogram\n\nggplot(exam_data, \n       aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey10\",\n                 fill=\"grey45\")+\n  theme_ipsum(base_size=12, grid=\"Y\") +\n  ggtitle(\"Distribution of Maths scores\")+\n  theme(plot.title = element_text(size=15, hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#creating-composite-plot-using-patchwork",
    "href": "Hands-on_exercise/Hands-on_EX02/Hands-on_EX02.html#creating-composite-plot-using-patchwork",
    "title": "Hands-on Exercise 2: Creating Elegant Graphics with ggplot2",
    "section": "Creating composite plot using patchwork",
    "text": "Creating composite plot using patchwork\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey60\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey60\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\npatchwork <- ((p1 + p2) / p3) + plot_annotation(tag_levels = \"I\")\npatchwork & theme_clean()"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX03/Hands-on_EX03.html",
    "href": "Hands-on_exercise/Hands-on_EX03/Hands-on_EX03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages (tidyverse and ggiraph) are installed and loaded.\n\npacman::p_load(ggplot2, ggiraph, grid, tidyverse, patchwork)\n\n\n\nImporting data\n\nexam_data <- read_csv(\"Exam_data.csv\")\n\n\n\nPlot a static dotplot with ggplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5, \n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\n\n\n\n\nPlot an interactive dotplot with ggirafe\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(             \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618   \n)\n\n\n\n\n\n\n\nDisplay multiple information on tooltip\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\nCustomizing tooltip style\n\ntooltip_css <- \"background-color:yellow; \nfont-style:bold; color:black;\" \n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = exam_data$tooltip),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    \n    opts_tooltip(    \n      css = tooltip_css)) \n)                                     \n\n\n\n\n\n\n\nAdding hover effect with data_id aesthetic - highlighting the same class\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),  \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\n\n\nStyling hover effect\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                       \n    opts_hover(css = \"fill: #202020;\"), \n    opts_hover_inv(css = \"opacity:0.2;\")\n  )\n)\n\n\n\n\n\n\n\nCombining tooltip and hover effect\n\ntooltip_css <- \"background-color:#ffdab9; \nfont-style:bold; color:black;\" \n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = exam_data$tooltip, #<<\n        data_id = CLASS),#<<              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_tooltip(    \n      css = tooltip_css)\n  )                                        \n)\n\n\n\n\n\n\n\nCoordinating multiple views with ggiraph\nWhen hovering over a data point of one of the dotplot, the related data point on the second data visualisation will be highlighted too.\n\nexam_data$tooltip <- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\n\np2 <- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID, tooltip = exam_data$tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\npatch = wrap_elements((p1) / p2)\ngirafe(ggobj = patch, \n       width_svg = 6,\n       height_svg = 5,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_exercise/Hands-on_EX04/Hands-on_EX04.html",
    "href": "Hands-on_exercise/Hands-on_EX04/Hands-on_EX04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Loading required packages\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\nImporting data\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\n\nOne-sample test: gghistostats() method\nUse gghistostats() to build a visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\nUse ggbetweenstats() to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\nOneway ANOVA Test: ggbetweenstats() method\nUse ggbetweenstats() to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\nUse ggscatterstats() to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex03.html",
    "href": "In-class_Exercise/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages (tidyverse and ggiraph) are installed and loaded.\n\npacman::p_load(ggiraph, tidyverse)\n\n\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\nPlot a dotplot (static)\n\nggplot(data=exam_data, aes(x= MATHS)) + \n      geom_dotplot(dotsize=0.5)\n\n\n\n\n\n\nPlot a dotplot (interactive)\n\np <- ggplot(data=exam_data, aes(x= MATHS)) + \n      geom_dotplot_interactive(aes(tooltip = ID),\n      stackgroups = TRUE, binwidth=1, method = \"histodot\")\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex04.html",
    "href": "In-class_Exercise/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Part 1: Statistical visualization\n\nLoading required packages\n\n\nHide the code\npacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot)\n\n\n\n\nImporting data\n\n\nHide the code\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nWorking with Plot_ly() method\n\n\nHide the code\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\nChanging color with color palette\n\n\nHide the code\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = \"Set1\")\n\n\n\n\n\n\n\n\nChanging to self-defined colors\n\n\nHide the code\nmy_colors <- c(\"pink\",\"skyblue\",\"lightgreen\",\"grey\")\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = my_colors)\n\n\n\n\n\n\n\n\n\nWorking with ggplotly() method\n\n\nHide the code\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nCoordinated Multiple Views with plotly\n\n\nHide the code\nd <- highlight_key(exam_data)  #<<\np1 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 <- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\nWorking with ggstatsplot\n\nTwo-sample mean test: ggbetweenstats()\n\n\nHide the code\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\n\n\nHide the code\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\n\n\n\n\nPart 2: Visualizing models\n\nLoading packages\n\n\nHide the code\npacman::p_load(readxl, performance, parameters, see)\n\n\n\n\nImporting data\n\n\nHide the code\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\n\nMultiple Regression Model using lm()\n\n\nHide the code\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nModel Diagnostic: checking for multicolinearity:\n\n\nHide the code\ncheck_collinearity(model)\n\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\n\nVisualize multicollinearity\nVIF, log scaled of more than 10 = multicollinearity that needs to be addressed.\n\n\nHide the code\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\nRemove “Mfg_Year” from model due to collinearity\n\n\nHide the code\nmodel1 <- lm(Price ~ Age_08_04 + Weight + KM\n             + Guarantee_Period, data = car_resale)\n\n\n\n\nCheck normality assumption\n\n\nHide the code\ncheck_n <- check_normality(model1)\n\n\n\n\nHide the code\nplot(check_n)\n\n\n\n\n\n\n\nCheck heteroscedasticity\n\n\nHide the code\ncheck_h <- check_heteroscedasticity(model1)\n\n\n\n\nHide the code\nplot(check_h)\n\n\n\n\n\n\n\nComplete check\n\n\nHide the code\ncheck_model(model1)\n\n\n\n\n\n\n\nVisualising Regression Parameters: see methods\n\n\nHide the code\nplot(parameters(model1))\n\n\n\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\n\nHide the code\nggcoefstats(model1, \n            output = \"plot\")\n\n\n\n\n\n\n\n\nPart 3: Visualising uncertainty (Standard errors)\n\n\nHide the code\npacman::p_load(crosstalk, DT, ggdist, gganimate)\n\n\n\n\nHide the code\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\n\n\nHide the code\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\n\nHide the code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.8,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by race\")"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex05.html",
    "href": "In-class_Exercise/In-class_Ex05.html",
    "title": "In Class Exercise 5",
    "section": "",
    "text": "Hide the code\npacman::p_load(corrplot, tidyverse, ggstatsplot)\n\n\n\n\n\n\n\nHide the code\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\n\n\n\n\n\nHide the code\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\n\nHide the code\npairs(wine[,1:11], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\n\nHide the code\n#|fig-width = 15\n#|fig-height = 15\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  sig.level = 0.05,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 8),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are not significant at p < 0.05\"\n)\n\n\n\n\n\n\n\n\ncorrplot has more features as compared to ggcorrmat - geometry object and ordering method. A correlation matrix needs to be calculated first before corrplot can be ploted.\n\n\nHide the code\nwine.cor <- cor(wine[, 1:11])\n\n\n\n\nHide the code\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\nWe can choose to reorder the correlation matrix using hclust (grouping the similar variables together)\n\n\nHide the code\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex05.html#use-ternary-plot-to-visualize-3-dimensions",
    "href": "In-class_Exercise/In-class_Ex05.html#use-ternary-plot-to-visualize-3-dimensions",
    "title": "In Class Exercise 5",
    "section": "Use ternary plot to visualize 3 dimensions",
    "text": "Use ternary plot to visualize 3 dimensions\n\n\nHide the code\npacman::p_load(ggtern, plotly)\n\n\n\n\nHide the code\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\nImport the data\n\n\nHide the code\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\n\n\nHide the code\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2018\") +\n  theme_rgbw()\n\n\n\n\n\n\n\nPlot interactive ternary diagram\n\n\nHide the code\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "In-class_Exercise/In-class_Ex05.html#plot-heatmap",
    "href": "In-class_Exercise/In-class_Ex05.html#plot-heatmap",
    "title": "In Class Exercise 5",
    "section": "Plot heatmap",
    "text": "Plot heatmap\n\n\nHide the code\npacman::p_load(seriation, dendextend, heatmaply)\n\n\n\n\nHide the code\nwh <- read_csv(\"data/WHData-2018.csv\")\n\n\n\nTransform the data frame\nMake “country” the row name (index) so that country will be used as label in heatmap\n\n\nHide the code\nrow.names(wh) <- wh$Country\n\n\nTransform the dataframe into a matrix (take columns number 4 and 7-12)\n\n\nHide the code\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\n\n\nCreate heatmap using heatmaply\n-c means excluding the columns\n\n\nHide the code\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 5,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics & Application",
    "section": "",
    "text": "Welcome to my site!\nHello, I am Shiang Rou.\nThis site contains all the individual assignments and work done for ISSS608 Visual Analytics module in SMU Master of IT in Business."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "In this take-home exercise, we will explore using age-sex pyramids to showcase the age and gender composition of Singapore population in nine selected planning areas on single view using trellis display.\nSelection of planning areas In each of the 5 regions, we select 1 largest mature and 1 largest non-mature planning areas, based on number of residents. In East and North regions, only mature or non-mature estates are available, hence, 2 planning areas of the same maturity are selected in these 2 regions."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#dataset",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#dataset",
    "title": "Take Home Exercise 1",
    "section": "2. Dataset",
    "text": "2. Dataset\nThe dataset used, Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022, can be retrieved from the Singapore Department of Statistics home page.\n\n\n\nFigure above shows csv file on SingStats website\n\n\nAdditional information on regions and maturity of the planning areas were referenced from Wikipedia and PropertyGuru Singapore to provide more insights to the readers. The additional information consolidated can be retrieved from Github."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#preparation-steps",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#preparation-steps",
    "title": "Take Home Exercise 1",
    "section": "3. Preparation Steps",
    "text": "3. Preparation Steps\n\n3.1 Preparing the data in Tableau\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nLoad the csv file into Tableau.  Click “Connect to Data”, select “Text file” and choose the CSV file to connect to\n\n\n\n2.\nView the Notes.  Click on “View data” beside “Notes” for the view data screen to appear.\n\n\n\n3.\nRename the columns according to the data in Notes.  In the viewing panel on the right, click the down arrow button beside each field name and select “Rename” to change the name according to table shown in step 2.\n\n\n\n4.\nSave the Tableau file.  Click on “Save” button\n\n\n\n5.\nAdding additional information on region and maturity.  Click “Add” and select “Microsoft Excel” to choose the file to add.\n\n\n\n6.\nBuild the connection with “Maturity”.  1. Drag “Maturity” to the right until a line is form to connect to the original data.2. Select “Planning Area” = “Planning Area1”\n\n\n\n7.\nBuild the connection with “Region”.  1. Drag “Region” to the right until a line is form to connect to the original data.2. Select “Planning Area” = “Planning Area (Region)”\n\n\n\n\n\n\n3.2 Select 9 planning areas\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nSelecting the 9 planning areas based on highest resident count and when possible, choose 1 mature and 1 non-mature area in each region. 1. Click on sheet 1, drag “Region” into Columns and drag “Planning Area” and “Maturity” into Rows, then place “Resident Count” as the table content.2. Sort each region to find out the planning areas with highest resident count.The 9 selected planning areas: Central - Bukit Merah (Mature)East - Bedok (Mature), Tampines (Mature)North - Woodlands (Non-mature), Yishun (Non-mature)North-East - Sengkang (Non-mature), Ang Mo Kio (Mature)West - Jurong West (Non-mature), Clementi (Mature)\n\n\n\n2.\nApply filter to dataset.  Drag “Planning Area” into filter, select the 9 planning areas listed in previous step and click “Apply”.\n\n\n\n3.\nApply filter to all worksheets.  Click on “Planning Area” under filter, select “Apply to Worksheets” and “All Using This Data Source”.\n\n\n\n\n\n\n3.3 Plotting the charts\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nCreate calculated field for female and male resident count  Under Analysis, click “Create Calculated Field”, create a calculated field - “Female” by keying in the formula shown on the right, then repeat the step and create another calculated field - “Male”.\n\n\n\n2.\nCreate the base for age-sex pyramids  Drag “Females” and “Males” onto Columns and drag “Age Group” onto Rows.\n\n\n\n3.\nCreate calculated field - Index  Under Analysis, click “Create Calculated Field”, create a calculated field - “Index” by keying in the formula shown on the right.\n\n\n\n4.\nCreate parameter - Number of Columns  On Data panel, right click on empty space and select “Create Parameter…”On Edit Parameter screen, change the name and key in Current value of 2\n\n\n\n5.\nCreate calculated field - Columns  Under Analysis, click “Create Calculated Field”, create a calculated field - “Columns” by keying in the formula shown on the right.Once the calculated field “Columns” is created, right click on it on the Data panel, and select “Convert to Discrete”\n\n\n\n6.\nBuild trellis display  1. Drag “Columns” to Columns and drag “Region” to Rows 2. Drag “Planning Area” to Detail 3. Right click on “Planning Area” under Detail and select compute using “Planning Area”\n\n\n\n7.\nEdit X-Axis of “Females”  1. Right click “Females” on X-axis and select “Edit Axis”. 2. Select “Fixed” under range and set Fixed start to 0 and Fixed end to 14000. Check “Reversed” under Scale. 3. Navigate to “Tick Marks”, set Major Tick Marks to “Fixed” and set Tick interval to 2000.\n\n\n\n8.\nEdit X-Axis of “Males”  Right click “Males” on X-axis and select “Edit Axis”. 1. Select “Fixed” under range and set Fixed start to 0 and Fixed end to 14000.  2. Navigate to “Tick Marks”, set Major Tick Marks to “Fixed” and set Tick interval to 2000.\n\n\n\n9.\nChange fill and border colors  Click on color, select red fill and border line for “Females” and blue for “Males” for more intuitive visualization.\n\n\n\n10.\nSort the charts by resident counts  1. Drag “Resident Count” onto Tooltip2. Right click on “Planning Area” under “All” panel, and select Sort3. Select sort by “Field” and set Field Name as “Resident Count”4. Click on the triangle icon beside Region under Rows, Select sort by “Field” and set Field Name as “Resident Count”\n\n\n\n\n\n\n3.4 Creating calculated fields for additional insights\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nCreate calculated field - Female-to-Male Ratio  Under Analysis, click “Create Calculated Field” to create a calculated field - “Female-to-Male Ratio” by keying in the formula shown on the right.\n\n\n\n2.\nGroup type of dwelling into public, private and others 1. Right click on Type of Dwelling, select “Create” and the “Group” 2. Select the respective dwelling types and click Group, once all the 3 groups have been formed, click “Apply”.\n\n\n\n3.\nCreate calculated field - Public/Private Ratio Under Analysis, click “Create Calculated Field” to create a calculated field - “Public/Private Ratio” by keying in the formula shown on the right.\n\n\n\n4.\nCreate calculated field - Top Age Group Under Analysis, click “Create Calculated Field” to create 2 calculated fields - “TopAgeGroup-Female” and “TopAgeGroup-Male” by keying in the formula shown on the right.\n\n\n\n5.\nCreate calculated field - Window Resident Count Under Analysis, click “Create Calculated Field” to create a calculated field - “Window Resident Count” by keying in the formula shown on the right.\n\n\n\n6.\nAdd a line plot on Female-to-Male ratio Drag “Female-to-Male Ratio” to Columns, click on the triangle icon and select compute using “Cell”. Right click on the X-Axis for line plot, select “Edit Axis” to edit the title to “F/M Ratio”\n\n\n\n\n\n\n3.5 Adding labels and tooltips\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nCreate AVG(1) Type AVG(1) into Columns.\n\n\n\n2.\nChange chart type and color opacity Click on the dropdown button beside “Bar” and select “Line”. Then click on Color and adjust opacity to 0%.\n\n\n\n3.\nAdding labels 1. Drag “Planning Area”, “Maturity”, “Window Resident Count”, “Female-to-Male ratio” and “public/private ratio” onto Label2. Right click on “Maturity” and select “Attribute”\n\n\n\n4.\nEdit label 1. Click on “Label” and click 2. Edit Label according to the screenshot on the right.\n\n\n\n5.\nEdit tooltip for AVG(1) 1. Click on Tooltip and edit tooltip according to the screenshot on the right.\n\n\n\n6.\nEdit X-Axis for AVG(1) Right click on AVG(1) on the X-axis1. Select “Uniform axis range for all rows or columns”, check “Reversed” under Scale, and remove the axis title.2. Navigate to “Tick Marks”, select “None” under Major Tick Marks\n\n\n\n7.\nAdd labels for “Males” (Max) 1. Drag Resident count onto Label under SUM(Males), click the dropdown and select “Add Table Calculation”2. Select “Percent of Total as Calculation Type and compute using”Pane (down)“3. Click on Label and check”Show mark labels, select “Min/Max” and uncheck “Label minimum value”\n\n\n\n8.\nAdd labels for “Females” (selected) 1. Drag “Females”, “Males” and “Resident Count” onto Label under SUM(Females), click the dropdown and select “Add table calculation”2. Select “Percent of Total as Calculation Type and compute using”Pane (down)“3. Click on Label and check”Show mark labels and select “Selected”\n\n\n\n9.\nHighlight the top age group in each planning area Drag “TopAgeGroup-Female” to color under SUM(Females) and drag “TopAgeGroup-Male” to color under SUM(Males)\n\n\n\n10.\nAdjust tooltips for SUM(Females) and SUM(Males) Drag “Females”, “Males”, “Female-to-Male ratio” and “Maturity” onto tooltip under both SUM(Females) and SUM(Males). Edit the tooltip as shown on the right.\n\n\n\n11.\nAdd label for F/M Ratio  Drag “Females-to-Males ratio” onto Label, click on Label, check “Show mark labels”, select “Min/Max” and deselect “Label minimum value”.\n\n\n\n\n\n\n3.6 Formatting\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nChange sheet name Double click on sheet name to rename, type in “Trellis: Age-Sex Pyramids”.\n\n\n\n2.\nHide field labels for Columns Right click on “Columns” and select “Hide Field Labels for Columns”.\n\n\n\n3.\nHide header Right click on “1” or “2” at the column header and deselect “Show Header”.\n\n\n\n4.\nFormat column shading and fonts Right click on column/row header, select “Format” and edit the shading, font size, and bold the header font.\n\n\n\n5.\nAnnotate Right click on the empty area on the chart, select “Annotate” and “Area”, type in the text shown on the right and adjust the size of the box to fit the empty area.\n\n\n\n\n\n\n3.7 Dashboarding\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nAdd new dashboard Click on  at the bottom of the page to create a new dashboard. Drag “Trellis: Age-Sex Pyramid” sheet from the Dashboard panel onto the space in the right. Under Size, select “Automatic”\n\n\n\n2.\nEdit title Double click on the title to edit the title to “Trellis Display: Age-Sex Pyramids of 9 planning areas located in 5 regions in Singapore in 2022”\n\n\n\n3.\nAdd descriptive text Drag “Text” from the Objects panel onto the charts. Adjust the height of the text box, double click on the text box to key in the text as shown on the right.\n\n\n\n\n\n\n3.8 Publishing to Tableau Public\n\n\n\n\n\n\n\n\nStep\nDescription\nScreenshot\n\n\n\n\n1.\nExtract Data Under Data, select “Extract Data” and save the .hyper file.\n\n\n\n2.\nPublish to Tableau Public Under Server, select “Tableau Public” and “Save to Tableau Public”."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#trellis-display-age-sex-pyramids",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#trellis-display-age-sex-pyramids",
    "title": "Take Home Exercise 1",
    "section": "4. Trellis Display: Age-Sex Pyramids",
    "text": "4. Trellis Display: Age-Sex Pyramids\n\nThe interactive visualization can now be viewed on Tableau Public."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#key-observations",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#key-observations",
    "title": "Take Home Exercise 1",
    "section": "5. Key Observations",
    "text": "5. Key Observations\n1. Population size varies greatly across planning areas (PA), outer edges of Singapore more populated. From the trellis display, we observed that Bedok, Tampines, Jurong West, Sengkang, Woodlands and Yishun are significantly more populous than the other 3 PAs. We have mapped out the locations as shown below and observed that the more populous PAs are all located at outer edges of Singapore, and the 3 less populous PAs are either located near to or in Central Region.   2. Mature estates have larger proportion of aged residents. The 3 mature PAs - Bukit Merah, AngMoKio and Clementi have 16.5%, 16.1% and 14.6% of their residents above 70 years old respectively. These proportions are much higher as compared to the 4 non-mature PAs (Woodlands, Yishun, Sengkang, Jurong West), with only 6.51% to 8.69% of their residents age above 70. This observation is consistent with the PA’s maturity. As mature PAs have been around for longer (>20 years), it’s logical to have composition of older residents. Although the 2 mature PAs in East Region (Bedok, Tampines) have slightly lower proportion of residents above 70, at 13.75% and 9.58% respectively, their proportion of residents above 60 is at a similar level to that of Bukit Merah, AngMoKio and Clementi.\n3. In the same region, non-mature PAs are more populated than mature PAs. For regions with both mature and non-mature PAs, the biggest non-mature PA in the region has significantly more residents than the biggest mature PA in the same region. This is observed from both West and North-East Region. The biggest non-mature PA in West Region, Jurong West is 1.75x more populous than Clementi, the biggest mature PA in the West. Also, Sengkang, the biggest non-mature PA in North-East Region has 57% more residents than the biggest mature PA in North-East, Ang Mo Kio.\n4. High proportion of young families in Yishun, Woodlands, Sengkang and Tampines. As evident from the trellis chart, these 4 PAs seem to be preferred by younger residents in their 20s and 30s. Besides, these PAs also have higher proportion of children under 10, as compared to other selected PAs. This indicates a pool of relatively younger families residing in these 4 PAs.\n5. Shift in age distribution after age 70, with Females-to-Males ratio peaks after age 90 across all PAs. The line charts show that female-to-male ratio follows a constant uptrend after age 70, with female population more than double the male population at age 90 onward. This is unsurprising as statistics have shown that females have longer average life expectancy than males in Singapore. Additionally, a small bulge is also observed on the female-to-male ratio at age 30s to 40s, and the reason behind this bulge might be worth investigating.\n6. Bedok has highest proportion of private housing, while Woodlands has highest proportion of HDB dwellers. In 2022, approximately 20% of residents resided in private housing in Singapore. Given this statistic, Bedok seems to be more prestige as 36.7% of residents here resided in private housing. Of all the private housing residents in Singapore, 11.3% of them reside in Bedok. Woodlands, on the other hand, has 92.3% of its residents residing in public housing."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#future-work",
    "href": "Take_Home_Exercise/Take_Home_Exercise_1/Take_Home_Exercise_1.html#future-work",
    "title": "Take Home Exercise 1",
    "section": "6. Future Work",
    "text": "6. Future Work\nThe above observations are extracted based on only 9 selected PAs, we can expand this study to all 55 PAs to find out if some of the observations persist."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html",
    "title": "Take Home Exercise 2",
    "section": "",
    "text": "In this take-home exercise, a selected Tableau visualization submitted by classmate in take-home exercise 1 is reviewed based on its clarity and aesthetics. Constructive suggestions are given based on data visualization design principles and best practices learned in Lesson 1 and 2. An alternative design is also proposed to help improve on the original visual. Instead of Tableau, the proposed design is produced using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#original-visualization",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#original-visualization",
    "title": "Take Home Exercise 2",
    "section": "2. Original visualization",
    "text": "2. Original visualization\nThe original visualization was done using Tableau and can be viewed on Tableau Public. Figure below shows a screenshot of the original visual.   The dataset used, Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022, can be retrieved from the Singapore Department of Statistics’ website."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#review-on-original-visualization",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#review-on-original-visualization",
    "title": "Take Home Exercise 2",
    "section": "3. Review on original visualization",
    "text": "3. Review on original visualization\nThis section is divided into 3 parts for easy reading.  In 3.1, the merits of original visual are identified for peer learning, followed by 3.2, where the focus is shifted to point out the areas of improvement on clarity, and lastly, 3.3, where the aesthetics aspect of the visual is discussed.\n\n3.1 Merits of the original visual\n\na. Clean background was used.\nIn the original visualization, a white background was used, allowing viewers to clearly see all the pyramid charts and labels at one glance.\n\n\nb. The charts are clearly labelled.\nThe x-axis, y-axis and all 9 planning areas were labelled accordingly, with all labels in horizontal writing that is easy for viewers to read.\n\n\nc. Appropriate use of pyramid chart.\nAs the intention of the dashboard is to showcase the age and gender distribution of the selected planning areas, the use of pyramid chart type is appropriate and suitable for comparison.\n\n\nd. The intention of the dashboard is clear to viewers.\nAs the same colors were used for male and female across the 9 pyramids, it is obvious to viewers that the 9 pyramids on the dashboard are of the same structure, and the intention is for viewers to easily compare the shape of the 9 pyramids.\n\n\n\n3.2 Clarity\n\na. Absence of clear title – difficult for viewers to comprehend the visual at first glance.\nThe dashboard lacks a title to describe the content of the visual. Even though a short name, “Singapore Population Distribution by Age”, was given to the Viz in Tableau, it does not provide enough context for viewers and hence, can be misleading. For example, based on the short name given, viewers who are unfamiliar with Singapore might assume that the charts include the age distribution of the entire Singapore’s population. In addition, the date of this data is unclear. As demographic data is ever changing, the title should also indicate the date of the data to prevent any confusion.\n\n\nb. Two different scales were used on the x-axes – might result in misleading comparisons.\nThe scales of x-axes differ for male and female population, and across the different planning areas. When doing comparison, viewers who are not aware of this difference could accidentally draw misleading insights. Taking Punggol’s pyramid as example, the bar of female residents in age group 35-39 has the same length as the bar of male residents in the same age group. However, the tooltip shows that there are 63k female residents and only 55k male residents in this age group.\n\n\n\n\n\n\n\nAgain, comparing between Choa Chu Kang and Punggol, judging solely from the length of the bars, both highlighted bars seem to have similar length, however, the number of residents in these two highlighted rows differs by 11k - Choa Chu Kang has 43,140 female residents and Punggol has 54,700 female residents.\n\n\n\n\n\nc. Number of residents shown on charts looks inflated.\nAdding up the number of residents in each age group, the original visualization shows that Bedok has a total of 1.46million residents. This number seems a bit dubious as according toSingStats, there were only 4.07million residents in Singapore as of June 2022. Adding up all the number of residents shown in the 9 planning areas in original visualization would have exceeded the total number of residents in Singapore. With the dataset used in take-home exercise 1, I have tabulated the number of residents by planning areas. As shown in the table below, Bedok has a total of 278k residents only, this does not tally with the original visual.\n\n\n\n\n\nHowever, we are unable to investigate this further as the original source of data used in the original visual was not provided, and the date of original data was not stated as well.\n\n\nd. Absence of legend for color gradient, and gradient intensity is relative to bars within the same pyramid, not across pyramids.\nThe original visualization included color gradient on the pyramid charts. However, there is no legend to describe the gradient, leaving it to the viewers to assume. When inspected closely, we realise that the gradient intensity is with relative to the other bars within the same pyramid, rather than across all 9 pyramids. This might mislead viewers when making comparison. Furthermore, as the length of the bars in the pyramids are already indicating the number of residents in each age group, color gradients might just be an extra element that competes for viewers’ attention.\n\n\n\n3.3 Aesthetics\n\na. Color options can be more intuitive.\nThe 2 colors used in the original visualization to represent male and female population can be made more intuitive. We can choose to align the color selection with common color associations that the general public have, i.e. blue for male and red/pink for female. This will help viewers to better associate and reduce the need for viewers to repeatedly refer to x-axis label for guidance.\n\n\nb. Charts of the 9 planning areas are not aligned.\nThe 9 pyramid charts seem to have been added to the dashboard one-by-one, resulting in different axis widths and misalignment of the charts. This affects the aesthetics of the dashboard, making it look disorganized and unprofessional.\n\n\nc. Overlapping y-axis labels.\nThe labels of the age groups on y-axis overlap each other, making it difficult for viewers to read. Some of the y-axis titles were cut off as well due to the different axis widths.\n\n\nd. Some longer bars in the pyramids were cropped off.\nAs shown in the screenshot below, the 2 highlighted bars seem to have been cropped off on the right. Even though the number of residents were provided in tooltips, this affects the aesthetics of the visual and the viewing experience.\n\n\n\n\n\n\n\ne. Repeated x-axis and y-axis labels.\nThe x-axis and y-axis labels should be the same across all 9 pyramids. Repeating the axis labels for 9 times makes the dashboard look congested."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#proposed-visualization",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#proposed-visualization",
    "title": "Take Home Exercise 2",
    "section": "4. Proposed Visualization",
    "text": "4. Proposed Visualization\nThe proposed visualization retains the merits of the original visualization while improving on the clarity and aesthetics. Below is a rough sketch of the proposed visualization.\n\n\n\n\n4.1 Key improvements.\n\na. Clear title - indicating context and date.\nA clear title “Age-sex pyramids of top 9 planning areas by population count in Singapore, June 2022” is included for viewers to quickly grasp the context of the charts.\n\n\nb. Single scale on shared x-axis and shared y-axis.\nInstead of using separate axes with different scales, the proposed visual is plotted on shared x and y axis. This allows viewers to compare across the different planning areas easily, without having to worry about the different axis scales.\n\n\nc. More intuitive colors.\nUse blue for males and pink for females to align to common color associations.\n\n\nd. Organized layout with proper alignment.\nThe title, labels, legends, and charts are properly positioned, sized and aligned.\n\n\ne. Allow comparison with overall resident population.\nThe composite chart under 5(i) allows viewers to easily compare the shape of pyramid of each planning area with the pyramid of entire Singapore resident population."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#the-remake",
    "href": "Take_Home_Exercise/Take_Home_Exercise_2/Take_Home_Exercise_2.html#the-remake",
    "title": "Take Home Exercise 2",
    "section": "5. The Remake",
    "text": "5. The Remake\n\na. Load the required libraries\n\n\nHide the code\npacman::p_load(ggiraph, plotly, patchwork, hrbrthemes, ggthemes, \n               knitr, rmarkdown, flextable, tidyverse)\n\n\n\n\nb. Import the data\n\n\nHide the code\nresults <- 'hide'\ndata2022 <- read_csv(\"respopagesextod2022.csv\")\npaged_table(data2022, options = list(rows.print = 5))\n\n\n\n\n  \n\n\n\n\n\nc. Group data by Planning Areas, Age Group and Sex\n\n\nHide the code\ndata2022$Age_Group <- factor (data2022$Age_Group, \n                              levels = unique(data2022$Age_Group)) \ndata2022$Planning_Areas <- factor (data2022$Planning_Areas, \n                                   levels = unique(data2022$Planning_Areas)) \n\n# Group by Planning Areas, Age Group and Sex\ndata_grp <- data2022 %>%\n                    group_by(`Planning_Areas`, `Age_Group`, `Sex`) %>%\n                    summarise('Population_Count'= sum(`Population`)) %>%\n                    ungroup()\npaged_table(data_grp, options = list(rows.print = 5))\n\n\n\n\n  \n\n\n\n\n\nd. Select the top 9 planning areas by population count\n\n\nHide the code\ntop9PA <- data_grp %>%\n  group_by(Planning_Areas) %>%\n  summarise(count = sum(Population_Count)) %>%\n  arrange(desc(count),.by_group = TRUE) %>%\n  top_n(9,count)\n\ndata_top9 <- data_grp[data_grp$Planning_Areas %in% top9PA$Planning_Areas,]\nprint(unique(data_top9$Planning_Areas))\n\n\n[1] Bedok         Choa Chu Kang Hougang       Jurong West   Punggol      \n[6] Sengkang      Tampines      Woodlands     Yishun       \n55 Levels: Ang Mo Kio Bedok Bishan Boon Lay Bukit Batok ... Yishun\n\n\n\n\ne. Converting population count of males to negative.\nIn order to plot age-sex pyramids, we need to convert the population count for one of the gender to negative. As we want “Male” to appear on the left side of the pyramids (to mimic the original visualization), we convert male population count to negative using the mutate function.\n\n\nHide the code\ndata_all_males <- data_grp %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Population_Count = -Population_Count)\n\ndata_males <- data_top9 %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Population_Count = -Population_Count)\n\n\n\n\nf. Combining the converted males population count with female population count.\n\n\nHide the code\ndata_all_females <- data_grp %>%\n  filter(`Sex` ==  \"Females\") \ndata_all_transform <- rbind(data_all_males,data_all_females)\n\ndata_females <- data_top9 %>%\n  filter(`Sex` ==  \"Females\") \ndata_top9_transform <- rbind(data_males,data_females)\n\n\n\n\ng. Plotting the age-sex pyramid of entire Singapore population.\n\n\nHide the code\ndata_all_transform_grp <- data_all_transform %>%\n  group_by(`Age_Group`, `Sex`) %>%\n  summarise('Population_Count'= sum(`Population_Count`)) %>%\n  ungroup()\n\nmy_colors <- c(\"salmon\",\"skyblue\")\npop_lab <- paste0(as.character(c(seq(160, 0, -40), seq(40, 160, 40))),\"k\")\np_all <- ggplot(data_all_transform_grp, aes (x = reorder(Age_Group, desc(Age_Group)), \n                                y = Population_Count, fill = Sex,\n                                text = paste(\"Age Group:\", Age_Group, \"\\nPopulation:\", abs(Population_Count), \"\\nSex\", Sex))) +\n    geom_bar(stat = \"identity\", width = .7) +\n    scale_y_continuous(name = \"Population Count\", breaks = seq (-160000,160000,40000), labels=pop_lab) +\n    xlab(\"Age\\nGroups\") +\n    coord_flip() + \n    theme_bw() + scale_fill_manual(values = my_colors) + \n    ggtitle(\"Age-sex pyramids of Singapore, June 2022\") + \n    theme(axis.title.y= element_text(angle=0),\n          axis.ticks.y = element_blank(),\n          panel.grid.major.y = element_blank(),\n          panel.grid.minor.x = element_line(colour = \"grey85\", linetype = \"dotted\"),\n          plot.title = element_text(size=13, hjust = 0.5),\n          legend.position = \"right\")\n\np_all\n\n\n\n\n\n\n\nh. Plotting the age-sex pyramids of top 9 planning areas\n\n\nHide the code\nxbrks <- seq(-12000, 12000, 3000)\nxlabls <- paste0(as.character(c(seq(12, 0, -3), seq(3, 12, 3))),\"k\")\nmy_colors <- c(\"salmon\",\"skyblue\")\np <-ggplot(data_top9_transform, aes (x = reorder(Age_Group, desc(Age_Group)), \n                                y = Population_Count, fill = Sex, \n                                text = paste(\"Age Group:\", Age_Group, \"\\nPopulation:\", abs(Population_Count), \"\\nSex\", Sex))) +\n    geom_bar(stat = \"identity\", width = .7) +\n    facet_wrap (~ Planning_Areas, nrow = 3, ncol = 3) + \n    scale_y_continuous(breaks = xbrks, labels = xlabls, name = \"Population Count\") +\n    xlab(\"Age\\nGroups\") +\n    coord_flip() + \n    theme_bw() + scale_fill_manual(values = my_colors) + \n    ggtitle(\"Age-sex pyramids of top 9 planning areas by population count in Singapore, June 2022\") + \n    theme(axis.title.y= element_text(angle=0),\n          axis.ticks.y = element_blank(),\n          panel.grid.major.y = element_blank(),\n          panel.grid.minor.x = element_line(colour = \"grey85\", linetype = \"dotted\"),\n          plot.title = element_text(size=13, hjust = 0.5),\n          legend.position = \"none\")\np1 <- p + theme(legend.position = \"right\")\n    \nshow(p1)\n\n\n\n\n\n\n\ni. Creating a composite chart.\n\n\nHide the code\ncolnames(top9PA)[2] <- \"Population Count\"\nmy_theme = gridExtra::ttheme_default(base_size = 12)\ntable <- gridExtra::tableGrob(top9PA, theme = my_theme)\npatch <- (p | table) +\n  plot_layout(widths = unit(c(22, 1),c(\"cm\",\"null\")))\n  \np_all / patch +\n  plot_layout(heights = unit(c(10, 1), c('cm', 'null')))\n\n\n\n\n\n\n\nj. Adding interactivity.\nWe can add interactivity to the plots using ggplotly.\n\n\nHide the code\np2 <- p_all + theme(axis.title.y = element_text(angle=0))\n\np3 <- p1 + theme(axis.text = element_text(size=5.5), \n          axis.title = element_text(size =9),\n          axis.title.y= element_text(angle=0),\n          axis.ticks.y = element_blank(),\n          strip.text = element_text(size=8),\n          plot.title = element_text(size=10, hjust = 0.5),\n          legend.key.size = unit(1, 'cm'),\n          legend.title = element_text(size=9),\n          legend.text = element_text(size=6),\n          legend.position = \"right\") \n\nggplotly(p2, tooltip=\"text\")\n\n\n\n\n\n\nHide the code\nggplotly(p3, tooltip=\"text\")"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_3/Take_Home_Exercise_3.html",
    "href": "Take_Home_Exercise/Take_Home_Exercise_3/Take_Home_Exercise_3.html",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "Section 1:Overview\nIn take-home exercise 3, various interactive visualizations are prepared using R packages and functions such as ggiraph, ggplot2, and ggstatsplot to showcase the salient patterns of the Singapore public housing resale prices in 2022. The focus of this exercise is on 4-room and 5-room public houses (HDB flats).\n\n\nSection 2:Data Preparation\nThe main dataset used is obtained from data.gov.sg. Additional information on region, town maturity and distance to mrt are also added to provide more insights to viewers.\n\n2.1. Load the required libraries\nSome required libraries include:\n\nggiraph, plotly: To produce interactive visualization\ntmap: To plot interactive choropleth map\npatchwork: To combine separate ggplots into the same graphic\nheatmaply: To plot interactive heatmaps\nggstatsplot: To create graphics with details from statistical tests\ntidyverse: A suite of data wrangling and visualization packages such as tidyr, ggplot2, knitr and so on\ncrosstalk: To connect HTML widgets and allow them to communicate with each other\n\n\n\nShow the code\npacman::p_load(ggiraph, plotly, patchwork, hrbrthemes, ggthemes, readxl,\n               tmap, ggstatsplot, heatmaply, kableExtra, rmarkdown,\n               RColorBrewer, tidyverse, crosstalk, htmltools, sf)\n\n\n\n\n2.2. Import data\nThe original data is available in csv format. Read_csv function is being used here to read the data. Below shows a snippet of the dataset.\n\n\nShow the code\nhdb_data <- read_csv(\"resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\npaged_table(hdb_data, options = list(rows.print = 5))\n\n\n\n\n  \n\n\n\n\n\n2.3. Filter the required data\nFor the purpose of this exercise, the data on year 2022 for 3-room and 4-room resale flats is filtered.\n\n\nShow the code\nhdb2022 <- hdb_data %>%\n  filter(substr(month,1,4) == 2022 & flat_type %in% c(\"3 ROOM\", \"4 ROOM\"))\n\n\n\n\n2.4. Import additional data\nAdditional data on region, town maturity and distance to mrt is imported into R Studio.\n\n\nShow the code\nregion_data <- read_xlsx(\"region.xlsx\")\nmrt_data <- read_csv(\"hdb_data.csv\")\n\n\n\n\n2.5. Join additional data onto hdb_data\nThe additional information on region, town maturity and distance to nearest mrt are joined to the main dataset.\n\n\nShow the code\nhdb_data1 <- left_join(hdb2022, region_data, by = c(\"town\" = \"TOWN\"))\n\nhdb_data1$address = paste(hdb_data1$block,hdb_data1$street_name)\n\nhdb_data_all <- left_join(hdb_data1, mrt_data, by = c(\"address\" = \"address\"))\n\n\n\n\n2.6. Calculate “resale price per sqm” and “remaining lease (year)”\nIn order to perform further analysis, the resale price per sqm is computed by dividing resale_price by floor_area_sqm. Remaining lease in year is also calculated by taking the substring of the remaining_lease column.\n\n\nShow the code\n# Calculating resale price per sqm\nhdb_data_all$price_sqm <- hdb_data_all$resale_price / hdb_data_all$floor_area_sqm\n\n# Calculating remaining lease (year)\nhdb_data_all$remaining_lease_year <- as.numeric(substr(hdb_data_all$remaining_lease,1,3))\n\n\n\n\n2.7. Categorize storey into low, middle, high and super high floor\nThe original storey_range field contains too many categories, making it difficult to analyse. Hence, we re-categorize storey_range into 4 categories.\n\nLevel 3 and below = Low\nLevel 4-9 = Middle\nLevel 10-24 = High\nLevel 25 and above = Super High\n\n\n\nShow the code\nhdb_data_all1 <- hdb_data_all %>% \n  separate(storey_range, into = c(NA, \"storey_low\"), sep = \"TO \", remove = FALSE) %>% \n  mutate(storey = \n           cut(as.numeric(storey_low), \n               breaks = c(1,3,9,24,100),\n               labels = c(\"Low\",\"Middle\",\"High\",\"Super High\")))\n\npaged_table(hdb_data_all1, options = list(rows.print = 5))\n\n\n\n\n  \n\n\n\n\n\n\nSection 3:Exploratory Analysis & Insights\nIn this section, exploratory data analysis is performed using various visualization methods to uncover patterns of the HDB resale market in Singapore and identify the differences between the various flat types and towns.\n\n3.1. Overview of the Singapore HDB resale market\nThis section aims to provide viewers with a basic overview on Singapore 3-room and 4-room HDB resale flats market by visualizing the number of transactions and overall resale prices in 2022.\n\ni. Design Consideration\nThe 2 interactive charts are designed to showcase the overall number of resale transactions in 2022 and the resale price range for both 3-room and 4-room flats across Singapore. Through the visuals, viewers can also identify the differences between the resale market for 3-room vs 4-room flats.\n\nBoxplot is used to display the resale price range, viewers can easily identify the difference in resale prices range between both flat types.\nTooltips shows information on mean, median, minimum, maximum, lower and upper quartile price.\nBar chart is used to clearly display the number of transaction for each flat type.\nMean resale prices are plotted (white dot on boxplot) for viewers to easily compare mean and median.\nThe boxplot and bar chart are coordinated for viewers to have multiple view when hover over the 2 flat types.\n\n\n\nii. Preparation Steps: Coordinated boxplot and bar chart for overview\n\n\nShow the code\n# Boxplot displaying the statistic summary of resale prices for 3-room and 4-room HDB.\n\n# specifying ybreaks and ylables\nybrks <- seq(200000, 1500000, 100000)\nylabls <- paste0(as.character(c(seq(200, 1500, 100))),\"k\")\n\n# customizing the appearance of tooltips\ntooltip_css <- \"background-color:white;padding:8px;border-radius:10px 10px 10px 10px;\nfont-style:bold; color:black;\"\n\n# Calculating the stats for tooltips\nstats <- hdb_data_all %>% \n  group_by(flat_type) %>% \n  summarise(\n        Min = prettyNum(min(resale_price),\n                        big.mark = \",\", scientific = FALSE),\n        Q1 = prettyNum(quantile(resale_price, 0.25),\n                       big.mark = \",\", scientific = FALSE),\n        Median = prettyNum(median(resale_price),\n                           big.mark = \",\", scientific = FALSE),\n        Mean = prettyNum(mean(resale_price),\n                         big.mark = \",\", scientific = FALSE),\n        Q3 = prettyNum(quantile(resale_price, 0.75),\n                       big.mark = \",\", scientific = FALSE),\n        Max = prettyNum(max(resale_price),\n                        big.mark = \",\", scientific = FALSE))\n\n# Placing the stats into a table\ntooltip_table <- data.frame(unclass(stats), check.names = FALSE) %>%\n  kableExtra::kable(align = \"c\", booktabs=TRUE, row.names=FALSE, \n                    col.names = c(\"Flat Type\", \"Min\", \"Q1\", \n                                  \"Median\", \"Mean\", \"Q3\", \"Max\")) %>%\n  row_spec(0, color = \"white\", background = \"black\")%>%\n  kable_styling(font_size = 11,bootstrap_options = \"bordered\")\n\n# Plotting the boxplot\np1 <- ggplot(data = hdb_data_all,\n             aes(x=flat_type, y=resale_price, fill = flat_type)) +\n  geom_boxplot_interactive(aes(tooltip=tooltip_table,\n                               data_id=flat_type)) +\n  stat_summary(fun.y=mean, geom=\"point\", shape = 15, color=\"white\")+\n  theme_linedraw() + xlab(\"Flat Type\") +\n  scale_y_continuous(name = \"Resale \\nPrice\", \n                     breaks=ybrks, labels=ylabls) +\n  ggtitle(\"Resale Prices by Flat Type\")+\n  theme(axis.title.y = element_text(angle=0),\n        axis.ticks.x = element_blank(),\n        panel.grid.minor.y = element_line(colour=\"grey85\", \n                                          linetype = \"dotted\"),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=10, face = \"bold\",hjust=0.5),\n        axis.title = element_text(size =9),\n        legend.position = \"none\")\n\n\n\n\nShow the code\n# Bar chart showing the number of transactions for each flat type\n# Computing the count\nlab <- hdb_data_all %>% group_by (flat_type) %>% tally()\n\n# Plotting the bar chart\np2 <- ggplot(lab,aes(x=flat_type, y=n, fill=flat_type))+\n  geom_bar_interactive(stat=\"identity\", aes(data_id=flat_type, tooltip=paste(\n    \"Number of Transactions =\",format(n,big.mark = \",\", scientific = FALSE))))+\n  geom_text(aes(label=n),vjust=1.3, color = \"white\")+\n  \n  theme_linedraw() + xlab(\"Flat Type\") +\n  scale_y_continuous(name = \"No. of\\nTransactions\") +\n  ggtitle(\"Number of Resale Transactions by Flat Type\")+\n  theme(axis.title.y = element_text(angle=0, hjust=1),\n        axis.ticks.x = element_blank(),\n        panel.grid.minor.y = element_line(colour = \"grey85\", linetype = \"dotted\"),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=10, face = \"bold\", hjust=0.5),\n        axis.title = element_text(size =9),\n        legend.position = \"none\")\n\n# Making the charts interactive with coordinating views\ngirafe(\n  code = print((p1+p2)+\n                 plot_annotation(\n                   title=\"Overview of HDB Resale Market, Singapore 2022\",\n                   subtitle = \"Comparison between 3-room and 4-room HDB\",\n                   caption=\"Data on 2022 Singapore resale prices from Data.gov.sg\",\n                   theme = theme(plot.title = element_text(face = \"bold\", size = 13),\n                                 plot.caption = element_text(face = \"italic\", size=7))\n                 )),\n  width_svg = 8,\n  height_svg = 8*0.618,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_hover(css = \"none\"),\n    opts_tooltip(css = tooltip_css)\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\nIn 2022,\n\nSingapore has more 4-room resale transactions than 3-room’s transactions.\n4-room resale price ranges from S$288k to S$1.37mil and is average at S$549k.\n3-room resale price ranges from S$200k to S$958k and is average at S$389k.\n\n\n\n\n\n\n\n3.2. Average resale prices vs number of transactions for each town.\nThis visualization showcases the resale prices and number of transactions by town for each flat type. It helps viewers understand the differences between town.\n\ni. Design Consideration\nThe 2 charts are interactive and coordinated. Each town is represented by a point and viewers can hover over each point to view the mean resale price and total number of resale transactions in 2022 in the specific town.\n\nScatter plot is chosen to cleanly visualize all the towns and present the relationship between mean resale price and number of transactions, a fitted line is also drawn to show the overall relationship.\nThe individual points are intentionally kept unlabeled to prevent cluttering on the chart. Instead, tooltip is used to present the required details.\nThe 2 charts are coordinated and drawn with the same scale to allow viewers to easily compare the differences between 3-room and 4-room resale market for each town.\n\n\n\nii. Preparation Steps: Scatter plot showing the relationship between resale price and number of transactions.\n\n\nShow the code\n# As the number of towns in dataset exceed the number of colors in palatte,\n# colorRampPalette is used to generate more colors.\ncolourCount = length(unique(hdb_data_all$town))\ngetPalette = colorRampPalette(brewer.pal(12, \"Paired\"))\n\n# Preparing the data for scatter plot\nscatter_data <- hdb_data_all %>% \n  group_by(town, flat_type) %>% \n  summarise(mean_price = round(mean(resale_price),1), trsn_number = n()) \n\n# Specifying the break and label for yaxis\nybrks1 <- seq(200000, 1000000, 100000)\nylabls1 <- paste0(as.character(c(seq(200, 1000, 100))),\"k\")\n\n# Plotting the scatter plot\nscatter <- ggplot(scatter_data, aes(x=trsn_number, y=mean_price)) +\n  geom_point_interactive(alpha = 0.7, aes(colour=factor(town), size = 5, data_id=town, \n                                          tooltip=paste(town,\"\\nNo. of Transactions: \",\n                                                         format(trsn_number,big.mark = \",\", scientific = FALSE),\n                                                         \"\\nMean Resale Price: \",\n                                                         format(mean_price,big.mark = \",\", scientific = FALSE)))) +\n  scale_colour_manual(values = getPalette(colourCount)) +\n  geom_smooth_interactive(method=lm, se=FALSE, col='lightblue',\n                          aes(tooltip=\"fitted line\", data_id=\"smooth\")) + \n  theme_linedraw() +\n  xlab(\"Number of Transactions\")+\n  labs(caption=\"Data on 2022 Singapore resale prices from Data.gov.sg\")+\n  scale_y_continuous(name = \"Mean\\nResale Price\", \n                     breaks=ybrks1, labels=ylabls1) +\n  ggtitle(\"Mean Resale Price vs Number of Resale Transactions by Flat Type, Singapore 2022\") +\n  theme(axis.title.y = element_text(angle=0),\n        panel.grid.major.y = element_line(colour=\"black\", \n                                          linetype = \"dotted\"),\n        panel.grid.major.x = element_line(colour=\"black\", \n                                          linetype = \"dotted\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        plot.title = element_text(size=11, hjust=0.5, face = \"bold\"),\n        plot.caption = element_text(face = \"italic\", size=7),\n        axis.title = element_text(size =9),\n        legend.position = \"none\") +\n  \n  # Use facet_wrap to split 3-room and 4-room into 2 plots\n  facet_wrap(~flat_type, ncol = 2)\n\n# Making the plot interactive using girafe\ngirafe(\n  ggobj=scatter,\n  width_svg = 9,\n  height_svg = 7*0.618,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.1;\"),\n    opts_hover(css = \"none\"),\n    opts_tooltip(css = tooltip_css)\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nIt seems that there is a negative relationship between average resale price and number of resale transaction, i.e.: towns with more resale transactions have lower average resale price.\nSengkang and Punggol, both located in the North-East region, have the highest number of 4-room resale transactions in 2022, while Bedok and Yishun have the highest number of 3-room resale transactions in 2022. All these 4 locations are located at the edges of Singapore.\nCentral area has the highest average resale price for 4-room, while Pasir Ris has the highest average resale price for 3-room.\nThe difference in 3-room and 4-room average resale price is lowest for Pasir Ris, only close to S$50k (~10%) difference. This is far from the overall average difference in 3-room and 4-room resale price, which is around S$160k (40%). One potential reason for this could be due to other characteristics of the flats, such as age of flats, floor size and location, which are not visualized in this chart.\nFrom this visualization, we know that towns in outskirt areas of Singapore have more resale transactions but lower resale prices, and the difference between 3-room and 4-room resale prices varies across towns.\n\n\n\n\n\n\n\n3.3. Distribution and range of resale prices by town\nUnlike the previous visualization where only the average resale prices for each town are shown, this section allows viewers to gain more insights based on the distribution of resale prices in each town.\n\ni. Design Consideration\n\nA boxplot is chosen to visualize the distribution of resale prices in each town.\nThe boxplot is coordinated with a bar chart showing the number of resale transactions in each town. With the coordinated view, viewers can easily observe the different characteristics of each town. For example, Central Area has third least number of resale transactions but its 4-room resale price boxplot has the longest interquartile range and whisker.\nThe towns are ordered by total number of transaction count on the bar chart and ordered by average resale price on the boxplot.\nMean prices are plotted for viewers to easily compare mean and median.\nTooltip shows maximum, minimum and median prices, median prices are shown instead of mean as mean can be easily influenced by outliers.\n\n\n\nii. Preparation Steps: Coordinated bar chart and boxplot showing resale price distribution by town\n\n\nShow the code\n# Plotting number of transactions by flat type and town\ngroup1<- hdb_data_all %>% group_by (town, flat_type) %>% tally()\n\ncolourCount = length(unique(hdb_data_all$town))\ngetPalette = colorRampPalette(brewer.pal(12, \"Paired\"))\n\np4 <- group1 %>%\n  mutate(town = fct_reorder(town, n, .fun='mean')) %>%\n  ggplot(aes(x=reorder(town, n), y=n, fill=factor(town))) + \n  scale_fill_manual(values = getPalette(colourCount)) +\n  geom_bar_interactive(stat=\"identity\", aes(data_id=town, tooltip=paste(\"Town: \",town,\n    \"\\nNumber of Transactions: \",format(n,big.mark = \",\", scientific = FALSE))))+\n  xlab(\"Towns\") +\n  theme_linedraw() +\n  scale_y_continuous(name = \"Number of \\nTransactions\") +\n  xlab(\"Town\")+\n  theme(axis.title.y = element_text(angle=0),\n        axis.ticks.x = element_blank(),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        panel.grid.minor.y = element_line(colour = \"grey85\", linetype = \"dotted\"),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=12, hjust = 0.5),\n        axis.title = element_text(size =9),\n        legend.position = \"none\") +\n  \n  facet_wrap(~flat_type, ncol = 1)\n\n\n\n\nShow the code\n# plotting boxplot of resale price by flat type and town\np3 <- ggplot(data = hdb_data_all,\n             aes(x=reorder(town, resale_price), y=resale_price, fill = town)) +\n  geom_boxplot_interactive(aes(tooltip=after_stat({\n        paste0(\"Min: \", prettyNum(.data$ymin,big.mark = \",\", scientific = FALSE),\n          \"\\nMax: \", prettyNum(.data$ymax,big.mark = \",\", scientific = FALSE),\n          \"\\nMedian: \", prettyNum(.data$middle,big.mark = \",\", scientific = FALSE)\n        )\n      }),\n      data_id=town)) +\n  scale_fill_manual(values = getPalette(colourCount)) +\n  stat_summary(fun.y=mean, geom=\"point\", shape = 3, color=\"white\")+\n  theme_linedraw() +\n  scale_y_continuous(name = \"Resale \\nPrice\", \n                     breaks=ybrks, labels=ylabls) +\n  xlab(\"Town\")+\n  theme(axis.title.y = element_text(angle=0),\n        axis.ticks.x = element_blank(),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        panel.grid.minor.y = element_line(colour=\"grey85\", \n                                          linetype = \"dotted\"),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=12, hjust=0.5),\n        axis.title = element_text(size =9),\n        legend.position = \"none\") +\n  facet_wrap(~flat_type,ncol = 1)\n\n# Putting the 2 charts together and have a coordinated view\ngirafe(\n  code = print((p4+p3) + plot_annotation(\n  title = 'Number of Resale Transactions & Resale Prices by Flat Type & Towns, Singapore 2022',\n  subtitle = \"Ordered by transaction count and mean resale price\",\n  caption = \"Data on 2022 Singapore HDB resale prices from Data.gov.sg\",\n  theme = theme(plot.title = element_text(face = \"bold\", size = 15),\n                plot.caption = element_text(face = \"italic\", size=7)))),\n  width_svg = 10,\n  height_svg = 11*0.618,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_hover(css = \"none\"),\n    opts_tooltip(css = tooltip_css))\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nCentral area has the longest resale price boxplot whisker and interquartile range for 4-room flat. Some other towns with long boxplot whisker (huge resale price range) and interquartile range are Clementi, Kallang/Whampoa, Bukit Merah, Toa Payoh, Ang Mo Kio and Geylang. These are all matured towns.\nYishun and Sengkang have the highest number of resale transactions, but the resale price range is relatively small (shorter whisker), which means the resale prices for the same flat type are rather consistent within the town.\nOther towns with relatively shorter whisker and interquartile range include Choa Chu Kang, Sembawang, Bukit Panjang, Pasir Ris, Woodlands, Jurong East and Jurong West. All of these are non-matured towns.\nHence, it is reasonable to hypothesize that resale prices of the same flat type in non-matured towns moves within smaller range as compared to matured towns.\n\n\n\n\n\n\n\n3.4. Geographic representation of towns and their respective resale prices.\nConsidering that not all viewers are familiar with the geographical location of each town in Singapore, a choropleth map is prepared to show where each town is located at.\n\ni. Design Consideration\n\nAn interactive choropleth map with color gradient is chosen to represent the average resale prices of each towns.\nThe mean resale price per sqm is shown using tooltip.\nViewers can deselect the “mpsz_price” layer on the map to view the street view.\n\n\n\nii. Preparation Steps: choropleth map showing the geographical location of town and their resale prices\n\n\nShow the code\n# Calculating mean prices by town\nmean_prices <- hdb_data_all %>%\n  group_by(town) %>% \n  summarise(\"Mean Resale Price Per Sqm\" = mean(price_sqm))\n\n# reading the map file\nmpsz <- st_read(dsn = 'master-plan-2014-subzone-boundary-web-shp',\n                layer = 'MP14_SUBZONE_WEB_PL',\n                crs = 3414) \n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\shiangrou\\ISSS608-VAA\\Take_Home_Exercise\\Take_Home_Exercise_3\\master-plan-2014-subzone-boundary-web-shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\nShow the code\nsingapore <- st_transform(mpsz, 4326)\n\n\n\n\nShow the code\n# Preparing the choropleth map\nmpsz_price <- left_join(singapore, mean_prices, by = c(\"PLN_AREA_N\" = \"town\"))\ntmap_mode(\"view\")\ntm_shape(mpsz_price)+\n  tmap_options(check.and.fix = TRUE)+\n  tm_fill(\"Mean Resale Price Per Sqm\", id=paste(\"PLN_AREA_N\"),\n          n = 6,\n          style = \"pretty\", \n          palette = \"Greens\") +\n  tm_borders(alpha = 0.7)\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nTowns around south of Singapore carry highest average resale prices per sqm.\nTowns around west of Singapore carry low average resale price per sqm.\n\n\n\n\n\n\n\n\nSection 4:Correlation Analysis and Confirmatory Analysis\nIn this section, correlation analysis is performed to find out the correlation between resale prices and other variables. Then, hypothesis testing is done to evaluate our hypotheses and produce statistical inferences.\n\n4.1. Correlation Analysis\nWith correlation analysis, we aim to answer 2 questions:\n\nWhich of the variables have the highest correlation coefficient with resale prices?\nWhich of the correlation coefficient is statistically significant?\n\nThrough this analysis, viewers can identify the correlated variables. However, do be mindful that correlation does not imply causation.\n\ni. Design Consideration\n\nA correlation matrix is plotted to provide a one-glance view of the pairwise correlation coefficients across the continuous variables.\nThe correlation matrix is color coded with a gradient to clearly show the magnitude of the correlation.\nThe pairwise correlation coefficients are calculated separately for each flat type, as the variables of each flat type might be correlated in different way.\nA significance level of 0.05 is used, for correlation that is not statistically significant, a red cross will be marked on the correlation coefficient.\n\n\n\nii. Preparation Steps:\n\n\nShow the code\n# Selecting all the numeric factors\nhdb_numeric <- hdb_data_all1 %>% \n  select(flat_type, resale_price, storey_low, floor_area_sqm, \n         nearest_distance_to_mrt, remaining_lease_year) %>%\n  rename(\"Resale Price\" = resale_price, \"Storey\"=storey_low, \n         \"Floor Area\"=floor_area_sqm, \n         \"Distance to nearest MRT/LRT\"=nearest_distance_to_mrt, \n         \"Remaining Lease (Year)\"=remaining_lease_year)\nhdb_numeric$Storey <- as.numeric(hdb_numeric$Storey)\n\n# Plotting the correlation matrix\ngrouped_ggcorrmat(\n    data = hdb_numeric,\n    grouping.var = flat_type,\n    hc.order = TRUE,\n    matrix.type = \"lower\",\n    output=\"plot\",\n    plotgrid.args = list(ncol = 2),\n    ggcorrplot.args = list(outline.color = \"black\",\n                           lab_col = \"navy\",\n                           lab_size = 3.2,\n                           pch.col = \"red\",\n                           pch.cex = 1),\n    annotation.args = list(tag_levels = \"i\",\n    title    = \"Pairwise Correlation of Numeric Variables\",\n    subtitle = \"Resale price most highly correlated with remaining lease and storey\",\n    caption = \"Data on 2022 Singapore resale prices from Data.gov.sg\"),\n    ggplot.component = list(theme_void(base_size = 8),\n                            theme(plot.title = element_text(size=12),\n                                plot.subtitle = element_text(size=7),\n                                plot.caption = element_text(size=2),\n                                legend.text = element_text(size=7),\n                                axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5,hjust = 0.9),\n                                axis.text.y = element_text(size = 8, hjust = 1),\n                                strip.text.x = element_text(size = 7),\n                                legend.key.size = unit(3, 'mm')\n                                ))\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nAll pairwise correlations are statistically significant.\n3-room resale price is most highly correlated with remaining lease with correlation coefficient of 0.61. (longer remaining lease, higher resale price)\n4-room resale price is most highly correlated with storey with correlation coefficient of 0.58. (higher floor, higher resale price)\nResale price has a weak negative correlation with distance to nearest train station (the nearer a flat is to a train station, the higher the resale price).\nIt is also observed that floor area is positively correlated with 3-room resale price (0.25) but negatively correlated (-0.05) with 4-room resale price.\nInterestingly, storey and remaining lease has a moderate positive correlation. This could be the result of the taller HDB developments in the more recent years.\nFor 4-room flats, remaining lease has negative correlation with floor area. This could be the result of the smaller flats built in more recent years.\n\n\n\n\n\n\n\n4.2. How much does resale prices increase with longer remaining lease and higher storey in each town.\nFrom 4.1, we saw that resale prices are most highly correlated with remaining lease and storey, hence, we want to find out how sensitive the resale prices is to remaining lease and storey in each town.\n\ni. Design Consideration\n\nHeatmap is used here as it can cleanly visualize 3-dimensional data (Remaining Lease, Town, Resale Price & Storey, Town, Resale Price).\nWith color gradient, viewers can distinctly identify the resale price pattern against remaining lease and storey at each town.\nTooltip is used to provide information on average resale price per sqm.\n\n\n\nii. Preparation Steps:\n\n\nShow the code\n# Creating the dataset required for heatmap\nhdb_by_lease<- hdb_data_all %>%\n  group_by(town, flat_type, remaining_lease_year) %>% \n  summarise(Mean_price_per_sqm = median(price_sqm)) \n\n# group the remaining lease into 7 groups\nhdb_by_lease <- hdb_by_lease %>% \n  mutate(lease_cat = \n           cut(remaining_lease_year, \n               breaks = c(0,39,49,59,69,79,89,99),\n               labels = c(\"<40 years\",\"40-49 years\",\"50-59 years\",\"61-69 years\",\"70-79 years\", \"80-89 years\", \"90-99 years\")))\n\n# plotting the heatmap for remaining lease\nheatmap1 <- ggplot(data = hdb_by_lease, \n                  mapping = aes(x = town, y = lease_cat,fill = Mean_price_per_sqm)) +\n            geom_tile_interactive(stat=\"identity\", \n                                  aes(data_id=town,tooltip=paste(town,\"\\n\",lease_cat,\"\\nMean Price Per Sqm: \", \n                                                                 prettyNum(round(Mean_price_per_sqm,0), \n                                                                           big.mark = \",\", scientific = FALSE)))) +\n  labs(title = \"Heatmap showing resale price/sqm by remaining lease and storey\", y = \"Remaining \\nLease\") +\n  scale_fill_distiller(name = \"Mean Resale Price per Sqm\", palette = \"Purples\",direction=1)+\n  theme_linedraw() +\n  theme(axis.title.y = element_text(angle=0),\n        axis.title.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.x = element_text(size = 6, angle = 90, vjust = 0.5, hjust=1),\n        axis.text.y = element_text(size = 6),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=12, hjust=0.5),\n        axis.title = element_text(size =9),\n        legend.key.height= unit(0.5, 'cm'),\n        legend.key.width= unit(1.8, 'cm'),\n        legend.title = element_text(size=8),\n        legend.text = element_text(size=6),\n        legend.position = \"top\") +\n  \n  facet_wrap(~flat_type)\n\n\n\n\nShow the code\n# Creating the dataset required for heatmap\nhdb_by_storey<- hdb_data_all %>%\n  group_by(town, flat_type, storey_range) %>% \n  summarise(Mean_price_per_sqm = median(price_sqm)) \n\n# plotting the heatmap for storey\nheatmap2 <- ggplot(data = hdb_by_storey, \n                  mapping = aes(x = town, y = storey_range,fill = Mean_price_per_sqm)) +\n            geom_tile_interactive(stat=\"identity\", aes(data_id=town,tooltip=paste(town,\"\\n\",storey_range,\"\\nMean Price Per Sqm: \",prettyNum(round(Mean_price_per_sqm,0), big.mark = \",\", scientific = FALSE))))+\n  labs(caption = \"Data on 2022 Singapore resale prices from Data.gov.sg\", x = \"Town\", y = \"Storey\") +\n  scale_fill_distiller(name = \"Mean Resale Price per Sqm\", palette = \"YlGn\", direction=1)+\n  theme_linedraw() +\n  theme(axis.title.y = element_text(angle=0),\n        axis.ticks.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.x = element_text(size = 6, angle = 90, vjust = 0.5, hjust=1),\n        axis.text.y = element_text(size = 6),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=12, hjust=0.5, face=\"bold\"),\n        plot.caption = element_text(size=7, face = \"italic\"),\n        axis.title = element_text(size =9),\n        legend.key.height= unit(0.5, 'cm'),\n        legend.key.width= unit(1.8, 'cm'),\n        legend.title = element_text(size=8),\n        legend.text = element_text(size=6),\n        legend.position = \"top\") +\n  \n  facet_wrap(~flat_type)\n\n# Putting the 2 heatmap together and have a coordinated view\ngirafe(\n  code = print(heatmap1/heatmap2),\n  width_svg = 6,\n  height_svg = 12*0.618,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.05;\"),\n    opts_hover(css = \"none\"),\n    opts_tooltip(css = tooltip_css)\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nIn line with previous correlation analysis, the heatmap shows that generally, longer remaining lease and higher storey command higher resale prices per sqm (darker color).\nHowever, kallng/whampoa 3-room resale prices show an unusual trend where flats with short remaining lease of below 50 years command higher prices as compared to flats with 50-89 remaining years.\nIt is observed that the price differential varies across town. Price differential for different remaining lease group is relatively lower in towns like Yishun, Woodlands, Jurong East and Jurong West, which are all non-mature towns nearer to the North and West edges of Singapore.\nTowns like Sembawang, Sengkang and Punggol do not have resale transactions with remaining lease of less than 70 years, indicating that these are newer residential towns.\nPrice differential for different storey vaires across town as well, with central area 4-room showing the biggest resale price differential between low floor and super high floor. For towns like Yishun, Woodlands, Sengkang, Sembawang, Punggol, Jurong East, and Jurong West, the price differential is relatively lower than the price differential in other towns.\nNot all towns have super high floor. Towns like Yishun, Pasir Ris, Tampines, Serangoon, and Bukit Timah seem to have only shorter HDB. While Central Area has the tallest high-rise HDB.\n\n\n\n\n\n\n\n4.3. Do the mean prices differ across regions and town maturity?\nIn the previous sections, we observed that resale prices seem to vary across towns. Hence, we form our hypotheses and perform hypothesis tests to find out if the means between groups are significantly different.\n\ni. Design Consideration\nFirst set of hypotheses: H0 : The mean resale prices are equal across 5 regions. H1 : The mean resale prices are not equal across 5 regions.\nSecond set of hypotheses: H0 : The mean resale prices are equal between mature and non-mature towns. H1 : The mean resale prices are not equal between mature and non-mature towns.\n\nNon-parametric tests are used as we are unsure if the prices are normally distributed.\nTo prevent cluttering the charts, only the p-value of non-significant pairs are shown at the top of the chart.\n\n\n\nii. Preparation Steps:\n\n\nShow the code\n# plot mean prices by region\ns1 <- grouped_ggbetweenstats(\n  data = hdb_data_all,\n  x = Region, \n  y = price_sqm,\n  grouping.var = flat_type,\n  xlab = \"Region\",\n  ylab = \"Mean Resale Price\",\n  type = \"np\",\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"non-significant\",\n  k =2,\n  messages = FALSE,\n  plotgrid.args = list(nrow = 1),\n  ggtheme = ggplot2::theme_bw(),\n  annotation.args = list(title = \"Mean Resale Price across Regions, Singapore 2022\",\n                         subtitle = \"Only 2 pairs under 3-Room are not statistically significant\"),) +\n  scale_fill_manual(values = getPalette(colourCount))\n\n\n\n\nShow the code\n# plot mean prices by town maturity\ns2 <- grouped_ggbetweenstats(\n  data = hdb_data_all,\n  x = Maturity, \n  y = price_sqm,\n  grouping.var = flat_type,\n  xlab = \"Town Maturity\",\n  ylab = \"Mean Resale Price\",\n  type = \"np\",\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"all\",\n  k =2,\n  messages = FALSE,\n  plotgrid.args = list(nrow = 1),\n  ggtheme = ggplot2::theme_bw(),\n  annotation.args = list(title = \"Mean Resale Price by Town Maturity, Singapore 2022\",\n                         subtitle = \"The pairs are statistically significant\")) +\n  scale_fill_manual(values = getPalette(colourCount))\n\n\n\n\nShow the code\n# Putting the 2 charts together using patchwork\ns1/s2 + plot_annotation(\n  title = 'Confirmatory Analysis: Testing the differences in mean resale prices across groups, 2022',\n  subtitle = \"Tests for different regions and town maturity\",\n  caption = \"Data on 2022 Singapore resale prices from Data.gov.sg\",\n  theme = theme(plot.title = element_text(face = \"bold\", size = 15),\n                plot.subtitle = element_text(size=12),\n                plot.caption = element_text(face = \"italic\", size = 7))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nFor first set of hypothesis test (across regions): at 95% confidence level, we reject the null hypothesis and infer that the mean resale prices across 5 regions are not equal for both 3-room and 4-room. For pairwise analysis, 2 pairs of regions under 3-room have p-value > 0.05 (not enough statistical evidence to reject the null hypothesis), hence, we can infer that the 3-room mean resale prices are equal between East & North, and between Central & North-East.\nFor second set of hypothesis (mature vs non-mature): at 95% confidence level, we reject the null hypothesis and infer that the mean resale prices are not equal between mature and non-mature towns.\nFrom the violin plots, it is also observed that Central region has the longest tail, indicating the highest price differential (largest resale price range).\nMature towns also have longer tail, indicating higher price differential (largest resale price range) as compared to non-mature towns. This is in line with the observation in section 3.3.\n\n\n\n\n\n\n\n\nSection 5:Quick interactive guide for home buyers\nWith the insights and inferences obtained from section 3 & 4, two visualization tools are designed for viewers to gain insights quickly and make clear and well-informed decision when selecting a resale flat based on their budgets and preferences.\n\n5.1. Multi-dimentsion bubble plot showing remaining lease, price per sqm and floor level by town\nIn this section, a bubble plot is designed for viewers to easily view the average resale prices in each towns, against the key characteristics of the flats. This could help viewers to effectively shortlist the suitable towns for their resale flats.\n\ni. Design Consideration\n\nThe bubble charts contain information about the 2 variables (storey and remaining lease) that are most highly correlated to resale price.\nThe bubbles are coordinated. When viewer hovers to one bubble, the other bubbles representing the same town will be highlighted. This allows viewers to quickly gain insights on the resale price of flats with different characteristics in the same town. With this, viewers can select the town within their budget and see the other options they might have within the town.\nTooltips are used here to indicate the key information\n\n\n\nii. Preparation Steps:\n\n\nShow the code\n# Computing the required fields for bubble plot\nbubble_data <- hdb_data_all1 %>% \n  group_by(town, flat_type, storey) %>% \n  summarise(mean_price_per_sqm = mean(price_sqm), mean_lease = mean(remaining_lease_year)) %>%\n  arrange(desc(mean_lease))\n\n# Plotting the bubble plot\nbubble <- ggplot(bubble_data, aes(x=mean_lease, y=mean_price_per_sqm, size=mean_price_per_sqm, fill= storey)) +\n  geom_point_interactive(aes(data_id=town, tooltip=paste(town,\"\\n\",storey,\"floor\\nMean Price/sqm: \",\n                                                         prettyNum(round(mean_price_per_sqm,0),big.mark=\",\"))), \n                         alpha = 0.5, shape=21, color=\"black\") +\n  scale_size(range=c(.1,18),name=\"Mean Price per Sqm\") +\n\n  theme_linedraw() +\n  ylab(\"Avg. Price \\nper Sqm\") +\n  xlab(\"Avg. Lease Remaining\")+\n  theme(axis.title.y = element_text(angle=0),\n        panel.grid.major.y = element_line(colour=\"black\", \n                                          linetype = \"dotted\"),\n        panel.grid.major.x = element_line(colour=\"black\", \n                                          linetype = \"dotted\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        plot.title = element_text(size=12, hjust=0.5),\n        axis.title = element_text(size =9),\n        legend.title = element_text(size=8),\n        legend.text = element_text(size=8),\n        legend.position = \"right\") +\n  scale_fill_viridis(discrete=TRUE, option=\"D\") +\n  \n  facet_wrap(~flat_type)\n\n# Making the bubble plot interactive with girafe\ngirafe(\n  ggobj=bubble + plot_annotation(\n  title = 'Interactive Bubble Plot for Town Selection',\n  subtitle = \"Avg. Reasle Price vs Avg. Lease Remaining for Each Town\",\n  caption = \"Data on 2022 Singapore HDB resale prices from Data.gov.sg\",\n  theme = theme(plot.title = element_text(face = \"bold\", size = 15),\n                plot.caption = element_text(face = \"italic\", size=7))),\n  width_svg = 8,\n  height_svg = 8*0.618,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.1;\"),\n    opts_hover(css = \"none\"),\n    opts_tooltip(css = tooltip_css)\n  ) \n)\n\n\n\n\n\n\n\n\n\n5.2 Interactive tool with easy filtering and flat details\nViewers who have specific preferences in mind for their resale flats can use this tool to help them shortlist the specific HDB blocks or addresses that fit their criteria. This tool is also suitable for viewers who would like to see more details about each resale transaction.\n\ni. Design Consideration\n\nFilter fields are built-in on the left, allowing viewers to freely calibrate based on their preferences and selection criteria. The selection made on filter will be reflected directly on the scatter plot.\nScatter plot is prepared to visualize each resale transaction. Viewers will be able to directly select the specific transaction(s) on the scatter plot using rectangular or lasso brush. Information about the selected resale transactions on the scatter plot will be shown in the table.\nTooltip on scatter plot is designed to showcase all relevant information about the resale transactions.\nViewers will also be able to filter directly from the table to find transactions that fit their preferences and criteria.\n\n\n\nii. Preparation Steps: Scatter plot with filter and datatable\n\n\nShow the code\n# Extract the required columns\nselected_col <- hdb_data_all1 %>%\n  select(Region, town, address, resale_price, flat_type, storey_range, storey,\n         floor_area_sqm, flat_model, lease_commence_date, remaining_lease, \n         nearest_mrt, nearest_distance_to_mrt)\n\n# Building interactive filters\nd <- highlight_key(selected_col)\n\nfilter_tools <- htmltools::div(\n  filter_select(\"town\", \"Town\", d, ~town),\n  filter_checkbox(\"flat_type\", \"Flat Type\", d, ~flat_type, inline = TRUE),\n  filter_slider(\"lease_commence_date\", \"Lease Commence Year\", d, ~lease_commence_date),\n  filter_slider(\"nearest_distance_to_mrt\", \"Distance to Nearest MRT/LRT\", d, ~nearest_distance_to_mrt),\n  filter_checkbox(\"storey\", \"Storey\", d, ~storey, inline = TRUE))\n\n# plotting interactive scatter plot using plotly\np <- plot_ly(data=d,\n        type= \"scatter\",\n        mode= \"markers\",\n        x= ~lease_commence_date, \n        y= ~resale_price,\n        color= ~storey,\n        colors= \"Accent\",\n        marker= list(size=5, opacity = 0.5,\n                     line=list(width=0.2, color=\"black\")),\n        text= ~paste(\"Town:\",town,\n                     \"\\nYear:\",lease_commence_date,\n                     \"\\nLocation:\",address,\n                     \"\\nType:\",flat_type,\n                     \"\\nResale Price:\",prettyNum(resale_price,big.mark=\",\"),\n                     \"\\nStorey:\",storey_range,\n                     \"\\nNearest MRT:\",nearest_mrt,\" ~\",nearest_distance_to_mrt,\"km\"\n                     )) %>% \n  layout(title = list(text=\"<b>Resale Price vs Lease Commencement Year, Singapore 2022</b>\"),\n         hoverlabel = list(align = \"left\"),\n         legend = list(orientation = \"h\", y = 1, x = 0),\n         xaxis = list(title=\"Lease Commencement Year\"),\n         yaxis = list(title=\"Resale Price (S$)\")) \n\ngg <- highlight(p, \"plotly_selected\")\n\n\n# Using crosstalk bscols to put all 3 elements (filter, scatter plot, datatable) together.\ncrosstalk::bscols(filter_tools,gg,DT::datatable(d, class= \"display\",\n                                                filter=list(position=\"top\", clear=FALSE),\n                                                options=list(pageLength = 10,scrollY = TRUE,\n                                                             iDisplayLength = 25),\n                                                ),\n                  widths = c(3,9,12),\n                  annotations = list(caption = \"Data from Data.gov.sg\"))\n\n\n\n\n\n\n\n\nTown\n\n\n\n\n\n\nFlat Type\n\n\n\n3 ROOM\n\n\n\n4 ROOM\n\n\n\n\n\nLease Commence Year\n\n\n\n\nDistance to Nearest MRT/LRT\n\n\n\n\nStorey\n\n\n\nLow\n\n\n\nMiddle\n\n\n\nHigh\n\n\n\nSuper High\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData from Data.gov.sg\n\n\n\n\n\n\n\n\nBonus Section:The impact of cooling measure on HDB resale transactions and prices\nOn 30 Sept 2022, Singapore government implemented cooling measure with the aim to moderate the heated residential property market and ensure housing affordability. In this section, we want to find out if the cooling measure did achieve it’s stated objective.\n\n\nShow the code\n# Computing the count and avg price per sqm\nhdb_month <- hdb_data_all %>% \n  group_by (month, flat_type) %>% \n  summarise(mean_price_per_sqm = round(mean(price_sqm),0), trsn_number = n()) \n\n# Plotting the chart\np5 <- ggplot(hdb_month,aes(x=month, y=trsn_number, fill=flat_type))+\n  geom_bar_interactive(stat=\"identity\", aes(data_id=month, tooltip=paste(\n    \"Number of Transactions =\",format(trsn_number,big.mark = \",\", scientific = FALSE))))+\n  geom_text(aes(label=trsn_number),vjust=1.5, size=2.5, color = \"white\")+\n  geom_point_interactive(aes(x=month,y=mean_price_per_sqm/10,data_id=month,\n                             tooltip=paste(\n    \"Avg. price per sqm =\",format(mean_price_per_sqm,big.mark = \",\", scientific = FALSE))),\n                         stat=\"identity\",color=\"red\", size=2)+\n  geom_vline_interactive(xintercept=\"2022-10\",lwd=0.5,colour=\"grey55\",linetype=\"dashed\",\n                         tooltip=\"Cooling Measure from 30 Sep 2022\",\n                         show.legend = TRUE) + \n  annotate(\"text\",x=\"2022-10\",y=20,label=\"Cooling Measure\", size=3, angle=90, hjust=0)+\n  theme_linedraw() + xlab(\"Month\") +\n  scale_y_continuous(name = \"No. of\\nTransactions\",\n                     sec.axis=sec_axis(trans=~.*10,name=\"Avg.\\nResale Price\\nper Sqm\")) +\n  ggtitle(\"Number of Resale Transactions & Average Resale Price per Sqm by Month\")+\n  theme(axis.title.y = element_text(angle=0, hjust=1),\n        axis.title.y.right = element_text(angle=0, vjust=1, hjust=0),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5),\n        axis.ticks.x = element_blank(),\n        panel.grid.minor.y = element_line(colour = \"grey85\", linetype = \"dotted\"),\n        panel.grid.major.x = element_blank(),\n        plot.title = element_text(size=12, face = \"bold\", hjust=0.5),\n        axis.title = element_text(size =9),\n        legend.position = \"none\") +\n  facet_wrap(~flat_type)\n\ngirafe(\n  ggobj=p5,\n  width_svg = 8,\n  height_svg = 7*0.618,\n  options = list(\n    opts_hover_inv(css = \"opacity:0.3;\"),\n    opts_hover(css = \"none\"),\n    opts_tooltip(css = tooltip_css)\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n\n\nA sharp drop in number of transactions is observed for both flat type at the start of the cooling measure. However, the number of transactions seem to have climbed back pretty quickly in the subsequent 2 months.\nAverage resale prices per sqm did not appear to vary much after the cooling measure.\nThat being said, the impact of cooling measure might not be obvious over the shorter term. Hence, study should be done over a longer period for more insights."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-1-overview",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-1-overview",
    "title": "Take Home Exercise 4",
    "section": "Section 1: Overview",
    "text": "Section 1: Overview\nIn this take home exercise"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-2-data-preparation",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-2-data-preparation",
    "title": "Take Home Exercise 4",
    "section": "Section 2: Data Preparation",
    "text": "Section 2: Data Preparation\nempty"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-3",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-3",
    "title": "Take Home Exercise 4",
    "section": "Section 3:",
    "text": "Section 3:\nempty"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-4",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-4",
    "title": "Take Home Exercise 4",
    "section": "Section 4:",
    "text": "Section 4:\nempty"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-5",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-5",
    "title": "Take Home Exercise 4",
    "section": "Section 5:",
    "text": "Section 5:\nempty"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-6",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-6",
    "title": "Take Home Exercise 4",
    "section": "Section 6:",
    "text": "Section 6:\nempty"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-7",
    "href": "Take_Home_Exercise/Take_Home_Exercise_4/Take_Home_Exercise_4.html#section-7",
    "title": "Take Home Exercise 4",
    "section": "Section 7:",
    "text": "Section 7:\nempty"
  }
]